{
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert/dmp.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert/dmp.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert/dmp.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert/dmp.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/convert",
        "sourceFileName": "dmp.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_dmp = require(\"../../lib/convert/dmp\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_word = require(\"../../lib/diff/word\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('convertToDMP', function () {\n  it('should output diff-match-patch format', function () {\n    var diffResult =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _word\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    diffWords)\n    /*istanbul ignore end*/\n    ('New Value  ', 'New  ValueMoreData ');\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _dmp\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    convertChangesToDMP)\n    /*istanbul ignore end*/\n    (diffResult)).to.eql([[0, 'New  '], [-1, 'Value'], [1, 'ValueMoreData'], [0, ' ']]);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRtcC5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZGlmZlJlc3VsdCIsImRpZmZXb3JkcyIsImV4cGVjdCIsImNvbnZlcnRDaGFuZ2VzVG9ETVAiLCJ0byIsImVxbCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBQSxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFXO0FBQ2xDQyxFQUFBQSxFQUFFLENBQUMsdUNBQUQsRUFBMEMsWUFBVztBQUNyRCxRQUFNQyxVQUFVO0FBQUc7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBVSxhQUFWLEVBQXlCLHFCQUF6QixDQUFuQjs7QUFFQTtBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQTtBQUFPO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQW9CSCxVQUFwQixDQUFQLEVBQXdDSSxFQUF4QyxDQUEyQ0MsR0FBM0MsQ0FBK0MsQ0FBQyxDQUFDLENBQUQsRUFBSSxPQUFKLENBQUQsRUFBZSxDQUFDLENBQUMsQ0FBRixFQUFLLE9BQUwsQ0FBZixFQUE4QixDQUFDLENBQUQsRUFBSSxlQUFKLENBQTlCLEVBQW9ELENBQUMsQ0FBRCxFQUFJLEdBQUosQ0FBcEQsQ0FBL0M7QUFDRCxHQUpDLENBQUY7QUFLRCxDQU5PLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL29zYW1hd2gvRGVza3RvcC9HcmFkZXByb29mL2pzZGlmZi90ZXN0L2NvbnZlcnQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NvbnZlcnRDaGFuZ2VzVG9ETVB9IGZyb20gJy4uLy4uL2xpYi9jb252ZXJ0L2RtcCc7XG5pbXBvcnQge2RpZmZXb3Jkc30gZnJvbSAnLi4vLi4vbGliL2RpZmYvd29yZCc7XG5cbmltcG9ydCB7ZXhwZWN0fSBmcm9tICdjaGFpJztcblxuZGVzY3JpYmUoJ2NvbnZlcnRUb0RNUCcsIGZ1bmN0aW9uKCkge1xuICBpdCgnc2hvdWxkIG91dHB1dCBkaWZmLW1hdGNoLXBhdGNoIGZvcm1hdCcsIGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGRpZmZSZXN1bHQgPSBkaWZmV29yZHMoJ05ldyBWYWx1ZSAgJywgJ05ldyAgVmFsdWVNb3JlRGF0YSAnKTtcblxuICAgIGV4cGVjdChjb252ZXJ0Q2hhbmdlc1RvRE1QKGRpZmZSZXN1bHQpKS50by5lcWwoW1swLCAnTmV3ICAnXSwgWy0xLCAnVmFsdWUnXSwgWzEsICdWYWx1ZU1vcmVEYXRhJ10sIFswLCAnICddXSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205894
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/array.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/array.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/array.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/array.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "array.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_array = require(\"../../lib/diff/array\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/array', function () {\n  describe('#diffArrays', function () {\n    it('Should diff arrays', function () {\n      var a = {\n        a: 0\n      },\n          b = {\n        b: 1\n      },\n          c = {\n        c: 2\n      };\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _array\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffArrays)\n      /*istanbul ignore end*/\n      ([a, b, c], [a, c, b]);\n      console.log(diffResult);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.deep.equals([{\n        count: 1,\n        value: [a]\n      }, {\n        count: 1,\n        value: [c],\n        removed: undefined,\n        added: true\n      }, {\n        count: 1,\n        value: [b]\n      }, {\n        count: 1,\n        value: [c],\n        removed: true,\n        added: undefined\n      }]);\n    });\n    it('should diff falsey values', function () {\n      var a = false;\n      var b = 0;\n      var c = ''; // Example sequences from Myers 1986\n\n      var arrayA = [c, b, a, b, a, c];\n      var arrayB = [a, b, c, a, b, b, a];\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _array\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffArrays)\n      /*istanbul ignore end*/\n      (arrayA, arrayB);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.deep.equals([{\n        count: 2,\n        value: [a, b],\n        removed: undefined,\n        added: true\n      }, {\n        count: 1,\n        value: [c]\n      }, {\n        count: 1,\n        value: [b],\n        removed: true,\n        added: undefined\n      }, {\n        count: 2,\n        value: [a, b]\n      }, {\n        count: 1,\n        value: [b],\n        removed: undefined,\n        added: true\n      }, {\n        count: 1,\n        value: [a]\n      }, {\n        count: 1,\n        value: [c],\n        removed: true,\n        added: undefined\n      }]);\n    });\n    describe('anti-aliasing', function () {\n      // Test apparent contract that no chunk value is ever an input argument.\n      var value = [0, 1, 2];\n      var expected = [{\n        count: value.length,\n        value: value\n      }];\n      var input = value.slice();\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _array\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffArrays)\n      /*istanbul ignore end*/\n      (input, input);\n      it('returns correct deep result for identical inputs', function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult).to.deep.equals(expected);\n      });\n      it('does not return the input array', function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult[0].value).to.not.equal(input);\n      });\n      var input1 = value.slice();\n      var input2 = value.slice();\n      var diffResult2 =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _array\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffArrays)\n      /*istanbul ignore end*/\n      (input1, input2);\n      it('returns correct deep result for equivalent inputs', function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult2).to.deep.equals(expected);\n      });\n      it('does not return the first input array', function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult2[0].value).to.not.equal(input1);\n      });\n      it('does not return the second input array', function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult2[0].value).to.not.equal(input2);\n      });\n    });\n    it('Should diff arrays with comparator', function () {\n      var a = {\n        a: 0\n      },\n          b = {\n        a: 1\n      },\n          c = {\n        a: 2\n      },\n          d = {\n        a: 3\n      };\n\n      function comparator(left, right) {\n        return left.a === right.a;\n      }\n\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _array\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffArrays)\n      /*istanbul ignore end*/\n      ([a, b, c], [a, b, d], {\n        comparator: comparator\n      });\n      console.log(diffResult);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.deep.equals([{\n        count: 2,\n        value: [a, b]\n      }, {\n        count: 1,\n        value: [c],\n        removed: true,\n        added: undefined\n      }, {\n        count: 1,\n        value: [d],\n        removed: undefined,\n        added: true\n      }]);\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205894
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/character.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/character.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/character.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/character.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "character.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_character = require(\"../../lib/diff/character\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/character', function () {\n  describe('#diffChars', function () {\n    it('Should diff chars', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _character\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffChars)\n      /*istanbul ignore end*/\n      ('New Value.', 'New ValueMoreData.');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New Value<ins>MoreData</ins>.');\n    });\n    describe('case insensitivity', function () {\n      it(\"is considered when there's no difference\", function () {\n        var diffResult =\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _character\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        diffChars)\n        /*istanbul ignore end*/\n        ('New Value.', 'New value.', {\n          ignoreCase: true\n        });\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New value.');\n      });\n      it(\"is considered when there's a difference\", function () {\n        var diffResult =\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _character\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        diffChars)\n        /*istanbul ignore end*/\n        ('New Values.', 'New value.', {\n          ignoreCase: true\n        });\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New value<del>s</del>.');\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJhY3Rlci5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZGlmZlJlc3VsdCIsImRpZmZDaGFycyIsImV4cGVjdCIsImNvbnZlcnRDaGFuZ2VzVG9YTUwiLCJ0byIsImVxdWFsIiwiaWdub3JlQ2FzZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBQSxRQUFRLENBQUMsZ0JBQUQsRUFBbUIsWUFBVztBQUNwQ0EsRUFBQUEsUUFBUSxDQUFDLFlBQUQsRUFBZSxZQUFXO0FBQ2hDQyxJQUFBQSxFQUFFLENBQUMsbUJBQUQsRUFBc0IsWUFBVztBQUNqQyxVQUFNQyxVQUFVO0FBQUc7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsT0FBVSxZQUFWLEVBQXdCLG9CQUF4QixDQUFuQjs7QUFDQTtBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQTtBQUFPO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLE9BQW9CSCxVQUFwQixDQUFQLEVBQXdDSSxFQUF4QyxDQUEyQ0MsS0FBM0MsQ0FBaUQsK0JBQWpEO0FBQ0QsS0FIQyxDQUFGO0FBS0FQLElBQUFBLFFBQVEsQ0FBQyxvQkFBRCxFQUF1QixZQUFXO0FBQ3hDQyxNQUFBQSxFQUFFLENBQUMsMENBQUQsRUFBNkMsWUFBVztBQUN4RCxZQUFNQyxVQUFVO0FBQUc7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsU0FBVSxZQUFWLEVBQXdCLFlBQXhCLEVBQXNDO0FBQUNLLFVBQUFBLFVBQVUsRUFBRTtBQUFiLFNBQXRDLENBQW5COztBQUNBO0FBQUE7QUFBQTs7QUFBQUo7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBO0FBQU87QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsU0FBb0JILFVBQXBCLENBQVAsRUFBd0NJLEVBQXhDLENBQTJDQyxLQUEzQyxDQUFpRCxZQUFqRDtBQUNELE9BSEMsQ0FBRjtBQUtBTixNQUFBQSxFQUFFLENBQUMseUNBQUQsRUFBNEMsWUFBVztBQUN2RCxZQUFNQyxVQUFVO0FBQUc7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsU0FBVSxhQUFWLEVBQXlCLFlBQXpCLEVBQXVDO0FBQUNLLFVBQUFBLFVBQVUsRUFBRTtBQUFiLFNBQXZDLENBQW5COztBQUNBO0FBQUE7QUFBQTs7QUFBQUo7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBO0FBQU87QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsU0FBb0JILFVBQXBCLENBQVAsRUFBd0NJLEVBQXhDLENBQTJDQyxLQUEzQyxDQUFpRCx3QkFBakQ7QUFDRCxPQUhDLENBQUY7QUFJRCxLQVZPLENBQVI7QUFXRCxHQWpCTyxDQUFSO0FBa0JELENBbkJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL29zYW1hd2gvRGVza3RvcC9HcmFkZXByb29mL2pzZGlmZi90ZXN0L2RpZmYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2RpZmZDaGFyc30gZnJvbSAnLi4vLi4vbGliL2RpZmYvY2hhcmFjdGVyJztcbmltcG9ydCB7Y29udmVydENoYW5nZXNUb1hNTH0gZnJvbSAnLi4vLi4vbGliL2NvbnZlcnQveG1sJztcblxuaW1wb3J0IHtleHBlY3R9IGZyb20gJ2NoYWknO1xuXG5kZXNjcmliZSgnZGlmZi9jaGFyYWN0ZXInLCBmdW5jdGlvbigpIHtcbiAgZGVzY3JpYmUoJyNkaWZmQ2hhcnMnLCBmdW5jdGlvbigpIHtcbiAgICBpdCgnU2hvdWxkIGRpZmYgY2hhcnMnLCBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnN0IGRpZmZSZXN1bHQgPSBkaWZmQ2hhcnMoJ05ldyBWYWx1ZS4nLCAnTmV3IFZhbHVlTW9yZURhdGEuJyk7XG4gICAgICBleHBlY3QoY29udmVydENoYW5nZXNUb1hNTChkaWZmUmVzdWx0KSkudG8uZXF1YWwoJ05ldyBWYWx1ZTxpbnM+TW9yZURhdGE8L2lucz4uJyk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnY2FzZSBpbnNlbnNpdGl2aXR5JywgZnVuY3Rpb24oKSB7XG4gICAgICBpdChcImlzIGNvbnNpZGVyZWQgd2hlbiB0aGVyZSdzIG5vIGRpZmZlcmVuY2VcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IGRpZmZSZXN1bHQgPSBkaWZmQ2hhcnMoJ05ldyBWYWx1ZS4nLCAnTmV3IHZhbHVlLicsIHtpZ25vcmVDYXNlOiB0cnVlfSk7XG4gICAgICAgIGV4cGVjdChjb252ZXJ0Q2hhbmdlc1RvWE1MKGRpZmZSZXN1bHQpKS50by5lcXVhbCgnTmV3IHZhbHVlLicpO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KFwiaXMgY29uc2lkZXJlZCB3aGVuIHRoZXJlJ3MgYSBkaWZmZXJlbmNlXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBkaWZmUmVzdWx0ID0gZGlmZkNoYXJzKCdOZXcgVmFsdWVzLicsICdOZXcgdmFsdWUuJywge2lnbm9yZUNhc2U6IHRydWV9KTtcbiAgICAgICAgZXhwZWN0KGNvbnZlcnRDaGFuZ2VzVG9YTUwoZGlmZlJlc3VsdCkpLnRvLmVxdWFsKCdOZXcgdmFsdWU8ZGVsPnM8L2RlbD4uJyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205894
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/css.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/css.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/css.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/css.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "css.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_css = require(\"../../lib/diff/css\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/css', function () {\n  describe('#diffCss', function () {\n    it('should diff css', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _css\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffCss)\n      /*istanbul ignore end*/\n      ('.test,#value .test{margin-left:50px;margin-right:-40px}', '.test2, #value2 .test {\\nmargin-top:50px;\\nmargin-right:-400px;\\n}');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del>.test</del><ins>.test2</ins>,<del>#value</del> <ins>#value2 </ins>.test<ins> </ins>{' + '<del>margin-left</del><ins>\\nmargin-top</ins>:50px;<ins>\\n</ins>' + 'margin-right:<del>-40px</del><ins>-400px;\\n</ins>}');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcy5qcyJdLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZGlmZlJlc3VsdCIsImRpZmZDc3MiLCJleHBlY3QiLCJjb252ZXJ0Q2hhbmdlc1RvWE1MIiwidG8iLCJlcXVhbCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBQSxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQVc7QUFDOUJBLEVBQUFBLFFBQVEsQ0FBQyxVQUFELEVBQWEsWUFBVztBQUM5QkMsSUFBQUEsRUFBRSxDQUFDLGlCQUFELEVBQW9CLFlBQVc7QUFDL0IsVUFBTUMsVUFBVTtBQUFHO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLE9BQ2pCLHlEQURpQixFQUVqQixvRUFGaUIsQ0FBbkI7O0FBR0E7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUE7QUFBTztBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxPQUFvQkgsVUFBcEIsQ0FBUCxFQUF3Q0ksRUFBeEMsQ0FBMkNDLEtBQTNDLENBQ0UsOEZBQ0Usa0VBREYsR0FFRSxvREFISjtBQUlELEtBUkMsQ0FBRjtBQVNELEdBVk8sQ0FBUjtBQVdELENBWk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvb3NhbWF3aC9EZXNrdG9wL0dyYWRlcHJvb2YvanNkaWZmL3Rlc3QvZGlmZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZGlmZkNzc30gZnJvbSAnLi4vLi4vbGliL2RpZmYvY3NzJztcbmltcG9ydCB7Y29udmVydENoYW5nZXNUb1hNTH0gZnJvbSAnLi4vLi4vbGliL2NvbnZlcnQveG1sJztcblxuaW1wb3J0IHtleHBlY3R9IGZyb20gJ2NoYWknO1xuXG5kZXNjcmliZSgnZGlmZi9jc3MnLCBmdW5jdGlvbigpIHtcbiAgZGVzY3JpYmUoJyNkaWZmQ3NzJywgZnVuY3Rpb24oKSB7XG4gICAgaXQoJ3Nob3VsZCBkaWZmIGNzcycsIGZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgZGlmZlJlc3VsdCA9IGRpZmZDc3MoXG4gICAgICAgICcudGVzdCwjdmFsdWUgLnRlc3R7bWFyZ2luLWxlZnQ6NTBweDttYXJnaW4tcmlnaHQ6LTQwcHh9JyxcbiAgICAgICAgJy50ZXN0MiwgI3ZhbHVlMiAudGVzdCB7XFxubWFyZ2luLXRvcDo1MHB4O1xcbm1hcmdpbi1yaWdodDotNDAwcHg7XFxufScpO1xuICAgICAgZXhwZWN0KGNvbnZlcnRDaGFuZ2VzVG9YTUwoZGlmZlJlc3VsdCkpLnRvLmVxdWFsKFxuICAgICAgICAnPGRlbD4udGVzdDwvZGVsPjxpbnM+LnRlc3QyPC9pbnM+LDxkZWw+I3ZhbHVlPC9kZWw+IDxpbnM+I3ZhbHVlMiA8L2lucz4udGVzdDxpbnM+IDwvaW5zPnsnXG4gICAgICAgICsgJzxkZWw+bWFyZ2luLWxlZnQ8L2RlbD48aW5zPlxcbm1hcmdpbi10b3A8L2lucz46NTBweDs8aW5zPlxcbjwvaW5zPidcbiAgICAgICAgKyAnbWFyZ2luLXJpZ2h0OjxkZWw+LTQwcHg8L2RlbD48aW5zPi00MDBweDtcXG48L2lucz59Jyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205895
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/json.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/json.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/json.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/json.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "json.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_json = require(\"../../lib/diff/json\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/json', function () {\n  describe('#diffJson', function () {\n    it('should accept objects', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: 789\n      }, {\n        a: 123,\n        b: 456\n      })).to.eql([{\n        count: 3,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": 789\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n    it('should accept objects with different order', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: 789\n      }, {\n        b: 456,\n        a: 123\n      })).to.eql([{\n        count: 3,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": 789\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n    it('should accept objects with nested structures', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: [1, 2, {\n          foo: 'bar'\n        }, 4]\n      }, {\n        a: 123,\n        b: 456,\n        c: [1, {\n          foo: 'bar'\n        }, 4]\n      })).to.eql([{\n        count: 5,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n  \"c\": [\\n    1,\\n'\n      }, {\n        count: 1,\n        value: '    2,\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 6,\n        value: '    {\\n      \"foo\": \"bar\"\\n    },\\n    4\\n  ]\\n}'\n      }]);\n    });\n    it('should accept dates', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: new Date(123),\n        b: new Date(456),\n        c: new Date(789)\n      }, {\n        a: new Date(124),\n        b: new Date(456)\n      })).to.eql([{\n        count: 1,\n        value: '{\\n'\n      }, {\n        count: 1,\n        value: '  \"a\": \"1970-01-01T00:00:00.123Z\",\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '  \"a\": \"1970-01-01T00:00:00.124Z\",\\n',\n        added: true,\n        removed: undefined\n      }, {\n        count: 1,\n        value: '  \"b\": \"1970-01-01T00:00:00.456Z\",\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": \"1970-01-01T00:00:00.789Z\"\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n    it('should accept undefined keys', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: null\n      }, {\n        a: 123,\n        b: 456\n      })).to.eql([{\n        count: 3,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": null\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: undefined\n      }, {\n        a: 123,\n        b: 456\n      })).to.eql([{\n        count: 4,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456\\n}'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: undefined\n      }, {\n        a: 123,\n        b: 456\n      }, {\n        undefinedReplacement: null\n      })).to.eql([{\n        count: 3,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": null\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n    it('should accept already stringified JSON', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      (JSON.stringify({\n        a: 123,\n        b: 456,\n        c: 789\n      }, undefined, '  '), JSON.stringify({\n        a: 123,\n        b: 456\n      }, undefined, '  '))).to.eql([{\n        count: 3,\n        value: '{\\n  \"a\": 123,\\n  \"b\": 456,\\n'\n      }, {\n        count: 1,\n        value: '  \"c\": 789\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n    it('should ignore trailing comma on the previous line when the property has been removed', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456,\n        c: 789\n      }, {\n        a: 123,\n        b: 456\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('{\\n  &quot;a&quot;: 123,\\n  &quot;b&quot;: 456,\\n<del>  &quot;c&quot;: 789\\n</del>}');\n    });\n    it('should ignore the missing trailing comma on the last line when a property has been added after it', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123,\n        b: 456\n      }, {\n        a: 123,\n        b: 456,\n        c: 789\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('{\\n  &quot;a&quot;: 123,\\n  &quot;b&quot;: 456,\\n<ins>  &quot;c&quot;: 789\\n</ins>}');\n    });\n    it('should throw an error if one of the objects being diffed has a circular reference', function () {\n      var circular = {\n        foo: 123\n      };\n      circular.bar = circular;\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _json\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        diffJson)\n        /*istanbul ignore end*/\n        (circular, {\n          foo: 123,\n          bar: {}\n        });\n      }).to['throw'](/circular|cyclic/i);\n    });\n  });\n  describe('#canonicalize', function () {\n    it('should put the keys in canonical order', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (getKeys(\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      canonicalize)\n      /*istanbul ignore end*/\n      ({\n        b: 456,\n        a: 123\n      }))).to.eql(['a', 'b']);\n    });\n    it('should dive into nested objects', function () {\n      var canonicalObj =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      canonicalize)\n      /*istanbul ignore end*/\n      ({\n        b: 456,\n        a: {\n          d: 123,\n          c: 456\n        }\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (getKeys(canonicalObj.a)).to.eql(['c', 'd']);\n    });\n    it('should dive into nested arrays', function () {\n      var canonicalObj =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      canonicalize)\n      /*istanbul ignore end*/\n      ({\n        b: 456,\n        a: [789, {\n          d: 123,\n          c: 456\n        }]\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (getKeys(canonicalObj.a[1])).to.eql(['c', 'd']);\n    });\n    it('should handle circular references correctly', function () {\n      var obj = {\n        b: 456\n      };\n      obj.a = obj;\n      var canonicalObj =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      canonicalize)\n      /*istanbul ignore end*/\n      (obj);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (getKeys(canonicalObj)).to.eql(['a', 'b']);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (getKeys(canonicalObj.a)).to.eql(['a', 'b']);\n    });\n    it('should accept a custom JSON.stringify() replacer function', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123\n      }, {\n        a: /foo/\n      })).to.eql([{\n        count: 1,\n        value: '{\\n'\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": 123\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": {}\\n',\n        added: true,\n        removed: undefined\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123\n      }, {\n        a: /foo/gi\n      }, {\n        stringifyReplacer: function\n        /*istanbul ignore start*/\n        stringifyReplacer\n        /*istanbul ignore end*/\n        (k, v)\n        /*istanbul ignore start*/\n        {\n          return (\n            /*istanbul ignore end*/\n            v instanceof RegExp ? v.toString() : v\n          );\n        }\n      })).to.eql([{\n        count: 1,\n        value: '{\\n'\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": 123\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": \"/foo/gi\"\\n',\n        added: true,\n        removed: undefined\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123\n      }, {\n        a: new Error('ohaider')\n      }, {\n        stringifyReplacer: function\n        /*istanbul ignore start*/\n        stringifyReplacer\n        /*istanbul ignore end*/\n        (k, v)\n        /*istanbul ignore start*/\n        {\n          return (\n            /*istanbul ignore end*/\n            v instanceof Error ?\n            /*istanbul ignore start*/\n            \"\".concat(\n            /*istanbul ignore end*/\n            v.name, \": \").concat(v.message) : v\n          );\n        }\n      })).to.eql([{\n        count: 1,\n        value: '{\\n'\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": 123\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": \"Error: ohaider\"\\n',\n        added: true,\n        removed: undefined\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _json\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffJson)\n      /*istanbul ignore end*/\n      ({\n        a: 123\n      }, {\n        a: [new Error('ohaider')]\n      }, {\n        stringifyReplacer: function\n        /*istanbul ignore start*/\n        stringifyReplacer\n        /*istanbul ignore end*/\n        (k, v)\n        /*istanbul ignore start*/\n        {\n          return (\n            /*istanbul ignore end*/\n            v instanceof Error ?\n            /*istanbul ignore start*/\n            \"\".concat(\n            /*istanbul ignore end*/\n            v.name, \": \").concat(v.message) : v\n          );\n        }\n      })).to.eql([{\n        count: 1,\n        value: '{\\n'\n      }, {\n        count: 1,\n        value: '  \\\"a\\\": 123\\n',\n        added: undefined,\n        removed: true\n      }, {\n        count: 3,\n        value: '  \\\"a\\\": [\\n    \"Error: ohaider\"\\n  ]\\n',\n        added: true,\n        removed: undefined\n      }, {\n        count: 1,\n        value: '}'\n      }]);\n    });\n  });\n});\n\nfunction getKeys(obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205895
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/line.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/line.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/line.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/line.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "line.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_line = require(\"../../lib/diff/line\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/line', function () {\n  // Line Diff\n  describe('#diffLines', function () {\n    it('should diff lines', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\nold value\\nline', 'line\\nnew value\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\n<del>old value\\n</del><ins>new value\\n</ins>line');\n    });\n    it('should the same lines in diff', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\nvalue\\nline', 'line\\nvalue\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\nvalue\\nline');\n    });\n    it('should handle leading and trailing whitespace', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\nvalue \\nline', 'line\\nvalue\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\n<del>value \\n</del><ins>value\\n</ins>line');\n    });\n    it('should handle windows line endings', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\r\\nold value \\r\\nline', 'line\\r\\nnew value\\r\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\r\\n<del>old value \\r\\n</del><ins>new value\\r\\n</ins>line');\n    });\n    it('should handle empty lines', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\n\\nold value \\n\\nline', 'line\\n\\nnew value\\n\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\n\\n<del>old value \\n</del><ins>new value\\n</ins>\\nline');\n    });\n    it('should handle empty input', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffLines)\n      /*istanbul ignore end*/\n      ('line\\n\\nold value \\n\\nline', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del>line\\n\\nold value \\n\\nline</del>');\n    });\n  }); // Trimmed Line Diff\n\n  describe('#TrimmedLineDiff', function () {\n    it('should diff lines', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffTrimmedLines)\n      /*istanbul ignore end*/\n      ('line\\nold value\\nline', 'line\\nnew value\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\n<del>old value\\n</del><ins>new value\\n</ins>line');\n    });\n    it('should the same lines in diff', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffTrimmedLines)\n      /*istanbul ignore end*/\n      ('line\\nvalue\\nline', 'line\\nvalue\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\nvalue\\nline');\n    });\n    it('should ignore leading and trailing whitespace', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffTrimmedLines)\n      /*istanbul ignore end*/\n      ('line\\nvalue \\nline', 'line\\nvalue\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\nvalue\\nline');\n    });\n    it('should handle windows line endings', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _line\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffTrimmedLines)\n      /*istanbul ignore end*/\n      ('line\\r\\nold value \\r\\nline', 'line\\r\\nnew value\\r\\nline');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('line\\r\\n<del>old value\\r\\n</del><ins>new value\\r\\n</ins>line');\n    });\n  });\n  describe('#diffLinesNL', function () {\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _line\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    diffLines)\n    /*istanbul ignore end*/\n    ('restaurant', 'restaurant\\n', {\n      newlineIsToken: true\n    })).to.eql([{\n      value: 'restaurant',\n      count: 1\n    }, {\n      value: '\\n',\n      count: 1,\n      added: true,\n      removed: undefined\n    }]);\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _line\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    diffLines)\n    /*istanbul ignore end*/\n    ('restaurant', 'restaurant\\nhello', {\n      newlineIsToken: true\n    })).to.eql([{\n      value: 'restaurant',\n      count: 1\n    }, {\n      value: '\\nhello',\n      count: 2,\n      added: true,\n      removed: undefined\n    }]);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205895
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/sentence.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/sentence.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/sentence.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/sentence.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "sentence.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_sentence = require(\"../../lib/diff/sentence\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('diff/sentence', function () {\n  describe('#diffSentences', function () {\n    it('Should diff Sentences', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _sentence\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffSentences)\n      /*istanbul ignore end*/\n      ('New Value.', 'New ValueMoreData.');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del>New Value.</del><ins>New ValueMoreData.</ins>');\n    });\n    it('should diff only the last sentence', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _sentence\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffSentences)\n      /*istanbul ignore end*/\n      ('Here im. Rock you like old man.', 'Here im. Rock you like hurricane.');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('Here im. <del>Rock you like old man.</del><ins>Rock you like hurricane.</ins>');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbnRlbmNlLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJkaWZmUmVzdWx0IiwiZGlmZlNlbnRlbmNlcyIsImV4cGVjdCIsImNvbnZlcnRDaGFuZ2VzVG9YTUwiLCJ0byIsImVxdWFsIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUFBLFFBQVEsQ0FBQyxlQUFELEVBQWtCLFlBQVc7QUFDbkNBLEVBQUFBLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixZQUFXO0FBQ3BDQyxJQUFBQSxFQUFFLENBQUMsdUJBQUQsRUFBMEIsWUFBVztBQUNyQyxVQUFNQyxVQUFVO0FBQUc7QUFBQTtBQUFBOztBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsT0FBYyxZQUFkLEVBQTRCLG9CQUE1QixDQUFuQjs7QUFDQTtBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQTtBQUFPO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLE9BQW9CSCxVQUFwQixDQUFQLEVBQXdDSSxFQUF4QyxDQUEyQ0MsS0FBM0MsQ0FBaUQsb0RBQWpEO0FBQ0QsS0FIQyxDQUFGO0FBS0FOLElBQUFBLEVBQUUsQ0FBQyxvQ0FBRCxFQUF1QyxZQUFXO0FBQ2xELFVBQU1DLFVBQVU7QUFBRztBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxPQUFjLGlDQUFkLEVBQWlELG1DQUFqRCxDQUFuQjs7QUFDQTtBQUFBO0FBQUE7O0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQTtBQUFPO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLE9BQW9CSCxVQUFwQixDQUFQLEVBQXdDSSxFQUF4QyxDQUEyQ0MsS0FBM0MsQ0FBaUQsK0VBQWpEO0FBQ0QsS0FIQyxDQUFGO0FBSUQsR0FWTyxDQUFSO0FBV0QsQ0FaTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9vc2FtYXdoL0Rlc2t0b3AvR3JhZGVwcm9vZi9qc2RpZmYvdGVzdC9kaWZmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtkaWZmU2VudGVuY2VzfSBmcm9tICcuLi8uLi9saWIvZGlmZi9zZW50ZW5jZSc7XG5pbXBvcnQge2NvbnZlcnRDaGFuZ2VzVG9YTUx9IGZyb20gJy4uLy4uL2xpYi9jb252ZXJ0L3htbCc7XG5cbmltcG9ydCB7ZXhwZWN0fSBmcm9tICdjaGFpJztcblxuZGVzY3JpYmUoJ2RpZmYvc2VudGVuY2UnLCBmdW5jdGlvbigpIHtcbiAgZGVzY3JpYmUoJyNkaWZmU2VudGVuY2VzJywgZnVuY3Rpb24oKSB7XG4gICAgaXQoJ1Nob3VsZCBkaWZmIFNlbnRlbmNlcycsIGZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgZGlmZlJlc3VsdCA9IGRpZmZTZW50ZW5jZXMoJ05ldyBWYWx1ZS4nLCAnTmV3IFZhbHVlTW9yZURhdGEuJyk7XG4gICAgICBleHBlY3QoY29udmVydENoYW5nZXNUb1hNTChkaWZmUmVzdWx0KSkudG8uZXF1YWwoJzxkZWw+TmV3IFZhbHVlLjwvZGVsPjxpbnM+TmV3IFZhbHVlTW9yZURhdGEuPC9pbnM+Jyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGRpZmYgb25seSB0aGUgbGFzdCBzZW50ZW5jZScsIGZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgZGlmZlJlc3VsdCA9IGRpZmZTZW50ZW5jZXMoJ0hlcmUgaW0uIFJvY2sgeW91IGxpa2Ugb2xkIG1hbi4nLCAnSGVyZSBpbS4gUm9jayB5b3UgbGlrZSBodXJyaWNhbmUuJyk7XG4gICAgICBleHBlY3QoY29udmVydENoYW5nZXNUb1hNTChkaWZmUmVzdWx0KSkudG8uZXF1YWwoJ0hlcmUgaW0uIDxkZWw+Um9jayB5b3UgbGlrZSBvbGQgbWFuLjwvZGVsPjxpbnM+Um9jayB5b3UgbGlrZSBodXJyaWNhbmUuPC9pbnM+Jyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205896
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/word.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/word.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/word.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff/word.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/diff",
        "sourceFileName": "word.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_word = require(\"../../lib/diff/word\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"../../lib/convert/xml\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('WordDiff', function () {\n  describe('#diffWords', function () {\n    it('should diff whitespace', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  ValueMoreData');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  <del>Value</del><ins>ValueMoreData</ins>');\n    });\n    it('should diff multiple whitespace values', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value  ', 'New  ValueMoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  <del>Value</del><ins>ValueMoreData</ins> ');\n    }); // Diff on word boundary\n\n    it('should diff on word boundaries', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New :Value:Test', 'New  ValueMoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  <del>:Value:Test</del><ins>ValueMoreData </ins>');\n      diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value:Test', 'New  Value:MoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  Value:<del>Test</del><ins>MoreData </ins>');\n      diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value-Test', 'New  Value:MoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  Value<del>-Test</del><ins>:MoreData </ins>');\n      diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  Value:MoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  Value<ins>:MoreData </ins>');\n    }); // Diff without changes\n\n    it('should handle identity', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New Value');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New Value');\n    });\n    it('should handle empty', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('');\n    });\n    it('should diff has identical content', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  Value');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New  Value');\n    }); // Empty diffs\n\n    it('should diff empty new content', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult.length).to.equal(1);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del>New Value</del>');\n    });\n    it('should diff empty old content', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', 'New Value');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<ins>New Value</ins>');\n    }); // With without anchor (the Heckel algorithm error case)\n\n    it('should diff when there is no anchor value', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value New Value', 'Value Value New New');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del>New</del><ins>Value</ins> Value New <del>Value</del><ins>New</ins>');\n    });\n    it('should token unicode characters safely', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      wordDiff\n      /*istanbul ignore end*/\n      .removeEmpty(\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      wordDiff\n      /*istanbul ignore end*/\n      .tokenize('jurídica'))).to.eql(['jurídica']);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      wordDiff\n      /*istanbul ignore end*/\n      .removeEmpty(\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      wordDiff\n      /*istanbul ignore end*/\n      .tokenize('wir üben'))).to.eql(['wir', ' ', 'üben']);\n    });\n    it('should include count with identity cases', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('foo', 'foo')).to.eql([{\n        value: 'foo',\n        count: 1\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('foo bar', 'foo bar')).to.eql([{\n        value: 'foo bar',\n        count: 3\n      }]);\n    });\n    it('should include count with empty cases', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('foo', '')).to.eql([{\n        value: 'foo',\n        count: 1,\n        added: undefined,\n        removed: true\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('foo bar', '')).to.eql([{\n        value: 'foo bar',\n        count: 3,\n        added: undefined,\n        removed: true\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', 'foo')).to.eql([{\n        value: 'foo',\n        count: 1,\n        added: true,\n        removed: undefined\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', 'foo bar')).to.eql([{\n        value: 'foo bar',\n        count: 3,\n        added: true,\n        removed: undefined\n      }]);\n    });\n    it('should ignore whitespace', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('hase igel fuchs', 'hase igel fuchs')).to.eql([{\n        count: 5,\n        value: 'hase igel fuchs'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('hase igel fuchs', 'hase igel fuchs\\n')).to.eql([{\n        count: 5,\n        value: 'hase igel fuchs\\n'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('hase igel fuchs\\n', 'hase igel fuchs')).to.eql([{\n        count: 5,\n        value: 'hase igel fuchs\\n'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('hase igel fuchs', 'hase igel\\nfuchs')).to.eql([{\n        count: 5,\n        value: 'hase igel\\nfuchs'\n      }]);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('hase igel\\nfuchs', 'hase igel fuchs')).to.eql([{\n        count: 5,\n        value: 'hase igel fuchs'\n      }]);\n    });\n    it('should diff whitespace with flag', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  ValueMoreData', {\n        ignoreWhitespace: false\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New<del> Value</del><ins>  ValueMoreData</ins>');\n    });\n    it('should diff with only whitespace', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', ' ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<ins> </ins>');\n      diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      (' ', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('<del> </del>');\n    });\n  });\n  describe('#diffWords - async', function () {\n    it('should diff whitespace', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  ValueMoreData', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New  <del>Value</del><ins>ValueMoreData</ins>');\n        done();\n      });\n    });\n    it('should diff multiple whitespace values', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value  ', 'New  ValueMoreData ', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New  <del>Value</del><ins>ValueMoreData</ins> ');\n        done();\n      });\n    }); // Diff on word boundary\n\n    it('should diff on word boundaries', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New :Value:Test', 'New  ValueMoreData ', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New  <del>:Value:Test</del><ins>ValueMoreData </ins>');\n        done();\n      });\n    }); // Diff without changes\n\n    it('should handle identity', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New Value', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New Value');\n        done();\n      });\n    });\n    it('should handle empty', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', '', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('');\n        done();\n      });\n    });\n    it('should diff has identical content', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', 'New  Value', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (err).to.be.undefined;\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New  Value');\n        done();\n      });\n    }); // Empty diffs\n\n    it('should diff empty new content', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value', '', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (diffResult.length).to.equal(1);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('<del>New Value</del>');\n        done();\n      });\n    });\n    it('should diff empty old content', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('', 'New Value', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('<ins>New Value</ins>');\n        done();\n      });\n    }); // With without anchor (the Heckel algorithm error case)\n\n    it('should diff when there is no anchor value', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      ('New Value New Value', 'Value Value New New', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('<del>New</del><ins>Value</ins> Value New <del>Value</del><ins>New</ins>');\n        done();\n      });\n    });\n  });\n  describe('#diffWordsWithSpace', function () {\n    it('should diff whitespace', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('New Value', 'New  ValueMoreData');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New<del> Value</del><ins>  ValueMoreData</ins>');\n    });\n    it('should diff multiple whitespace values', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('New Value  ', 'New  ValueMoreData ');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('New<ins>  ValueMoreData</ins> <del>Value  </del>');\n    });\n    it('should inserts values in parenthesis', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('()', '(word)');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('(<ins>word</ins>)');\n    });\n    it('should inserts values in brackets', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('[]', '[word]');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('[<ins>word</ins>]');\n    });\n    it('should inserts values in curly braces', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('{}', '{word}');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('{<ins>word</ins>}');\n    });\n    it('should inserts values in quotes', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      (\"''\", \"'word'\");\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal(\"'<ins>word</ins>'\");\n    });\n    it('should inserts values in double quotes', function () {\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('\"\"', '\"word\"');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult)).to.equal('&quot;<ins>word</ins>&quot;');\n    });\n    it('should treat newline as separate token (issues #180, #211)', function () {\n      // #180\n      var diffResult1 =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('foo\\nbar', 'foo\\n\\n\\nbar');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult1)).to.equal('foo\\n<ins>\\n\\n</ins>bar'); // #211\n\n      var diffResult2 =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('A\\n\\nB\\n', 'A\\nB\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _xml\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      convertChangesToXML)\n      /*istanbul ignore end*/\n      (diffResult2)).to.equal('A\\n<del>\\n</del>B\\n');\n    });\n    it('should perform async operations', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _word\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWordsWithSpace)\n      /*istanbul ignore end*/\n      ('New Value  ', 'New  ValueMoreData ', function (err, diffResult) {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New<ins>  ValueMoreData</ins> <del>Value  </del>');\n        done();\n      });\n    });\n    describe('case insensitivity', function () {\n      it(\"is considered when there's a difference\", function () {\n        var diffResult =\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _word\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        diffWordsWithSpace)\n        /*istanbul ignore end*/\n        ('new value', 'New  ValueMoreData', {\n          ignoreCase: true\n        });\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New<del> value</del><ins>  ValueMoreData</ins>');\n      });\n      it(\"is considered when there's no difference\", function () {\n        var diffResult =\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _word\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        diffWordsWithSpace)\n        /*istanbul ignore end*/\n        ('new value', 'New Value', {\n          ignoreCase: true\n        });\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _xml\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        convertChangesToXML)\n        /*istanbul ignore end*/\n        (diffResult)).to.equal('New Value');\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147314514
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/index.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\nDiff = _interopRequireWildcard(require(\"../lib\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*istanbul ignore end*/\ndescribe('root exports', function () {\n  it('should export APIs', function () {\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.Diff).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffChars).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffWords).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffWordsWithSpace).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffLines).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffTrimmedLines).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffSentences).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffCss).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffJson).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.diffArrays).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.structuredPatch).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.createTwoFilesPatch).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.createPatch).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.applyPatch).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.applyPatches).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.parsePatch).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.convertChangesToDMP).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.convertChangesToXML).to.exist;\n\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _chai\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    expect)\n    /*istanbul ignore end*/\n    (Diff.canonicalize).to.exist;\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJleHBlY3QiLCJEaWZmIiwidG8iLCJleGlzdCIsImRpZmZDaGFycyIsImRpZmZXb3JkcyIsImRpZmZXb3Jkc1dpdGhTcGFjZSIsImRpZmZMaW5lcyIsImRpZmZUcmltbWVkTGluZXMiLCJkaWZmU2VudGVuY2VzIiwiZGlmZkNzcyIsImRpZmZKc29uIiwiZGlmZkFycmF5cyIsInN0cnVjdHVyZWRQYXRjaCIsImNyZWF0ZVR3b0ZpbGVzUGF0Y2giLCJjcmVhdGVQYXRjaCIsImFwcGx5UGF0Y2giLCJhcHBseVBhdGNoZXMiLCJwYXJzZVBhdGNoIiwiY29udmVydENoYW5nZXNUb0RNUCIsImNvbnZlcnRDaGFuZ2VzVG9YTUwiLCJjYW5vbmljYWxpemUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBRUFBLFFBQVEsQ0FBQyxjQUFELEVBQWlCLFlBQVc7QUFDbENDLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxFQUF1QixZQUFXO0FBQ2xDO0FBQUE7QUFBQTs7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ0EsSUFBWixFQUFrQkMsRUFBbEIsQ0FBcUJDLEtBQXJCOztBQUVBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ0csU0FBWixFQUF1QkYsRUFBdkIsQ0FBMEJDLEtBQTFCOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ0ksU0FBWixFQUF1QkgsRUFBdkIsQ0FBMEJDLEtBQTFCOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ0ssa0JBQVosRUFBZ0NKLEVBQWhDLENBQW1DQyxLQUFuQzs7QUFDQTtBQUFBO0FBQUE7O0FBQUFIO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxLQUFPQyxJQUFJLENBQUNNLFNBQVosRUFBdUJMLEVBQXZCLENBQTBCQyxLQUExQjs7QUFDQTtBQUFBO0FBQUE7O0FBQUFIO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxLQUFPQyxJQUFJLENBQUNPLGdCQUFaLEVBQThCTixFQUE5QixDQUFpQ0MsS0FBakM7O0FBQ0E7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDUSxhQUFaLEVBQTJCUCxFQUEzQixDQUE4QkMsS0FBOUI7O0FBRUE7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDUyxPQUFaLEVBQXFCUixFQUFyQixDQUF3QkMsS0FBeEI7O0FBQ0E7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDVSxRQUFaLEVBQXNCVCxFQUF0QixDQUF5QkMsS0FBekI7O0FBRUE7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDVyxVQUFaLEVBQXdCVixFQUF4QixDQUEyQkMsS0FBM0I7O0FBRUE7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDWSxlQUFaLEVBQTZCWCxFQUE3QixDQUFnQ0MsS0FBaEM7O0FBQ0E7QUFBQTtBQUFBOztBQUFBSDtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBO0FBQUEsS0FBT0MsSUFBSSxDQUFDYSxtQkFBWixFQUFpQ1osRUFBakMsQ0FBb0NDLEtBQXBDOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ2MsV0FBWixFQUF5QmIsRUFBekIsQ0FBNEJDLEtBQTVCOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ2UsVUFBWixFQUF3QmQsRUFBeEIsQ0FBMkJDLEtBQTNCOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ2dCLFlBQVosRUFBMEJmLEVBQTFCLENBQTZCQyxLQUE3Qjs7QUFDQTtBQUFBO0FBQUE7O0FBQUFIO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxLQUFPQyxJQUFJLENBQUNpQixVQUFaLEVBQXdCaEIsRUFBeEIsQ0FBMkJDLEtBQTNCOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ2tCLG1CQUFaLEVBQWlDakIsRUFBakMsQ0FBb0NDLEtBQXBDOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ21CLG1CQUFaLEVBQWlDbEIsRUFBakMsQ0FBb0NDLEtBQXBDOztBQUNBO0FBQUE7QUFBQTs7QUFBQUg7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEtBQU9DLElBQUksQ0FBQ29CLFlBQVosRUFBMEJuQixFQUExQixDQUE2QkMsS0FBN0I7QUFDRCxHQXhCQyxDQUFGO0FBeUJELENBMUJPLENBQVIiLCJzb3VyY2VSb290IjoiL1VzZXJzL29zYW1hd2gvRGVza3RvcC9HcmFkZXByb29mL2pzZGlmZi90ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRGlmZiBmcm9tICcuLi9saWInO1xuXG5pbXBvcnQge2V4cGVjdH0gZnJvbSAnY2hhaSc7XG5cbmRlc2NyaWJlKCdyb290IGV4cG9ydHMnLCBmdW5jdGlvbigpIHtcbiAgaXQoJ3Nob3VsZCBleHBvcnQgQVBJcycsIGZ1bmN0aW9uKCkge1xuICAgIGV4cGVjdChEaWZmLkRpZmYpLnRvLmV4aXN0O1xuXG4gICAgZXhwZWN0KERpZmYuZGlmZkNoYXJzKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5kaWZmV29yZHMpLnRvLmV4aXN0O1xuICAgIGV4cGVjdChEaWZmLmRpZmZXb3Jkc1dpdGhTcGFjZSkudG8uZXhpc3Q7XG4gICAgZXhwZWN0KERpZmYuZGlmZkxpbmVzKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5kaWZmVHJpbW1lZExpbmVzKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5kaWZmU2VudGVuY2VzKS50by5leGlzdDtcblxuICAgIGV4cGVjdChEaWZmLmRpZmZDc3MpLnRvLmV4aXN0O1xuICAgIGV4cGVjdChEaWZmLmRpZmZKc29uKS50by5leGlzdDtcblxuICAgIGV4cGVjdChEaWZmLmRpZmZBcnJheXMpLnRvLmV4aXN0O1xuXG4gICAgZXhwZWN0KERpZmYuc3RydWN0dXJlZFBhdGNoKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5jcmVhdGVUd29GaWxlc1BhdGNoKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5jcmVhdGVQYXRjaCkudG8uZXhpc3Q7XG4gICAgZXhwZWN0KERpZmYuYXBwbHlQYXRjaCkudG8uZXhpc3Q7XG4gICAgZXhwZWN0KERpZmYuYXBwbHlQYXRjaGVzKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5wYXJzZVBhdGNoKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5jb252ZXJ0Q2hhbmdlc1RvRE1QKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5jb252ZXJ0Q2hhbmdlc1RvWE1MKS50by5leGlzdDtcbiAgICBleHBlY3QoRGlmZi5jYW5vbmljYWxpemUpLnRvLmV4aXN0O1xuICB9KTtcbn0pO1xuIl19",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205896
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/apply.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/apply.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/apply.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/apply.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
        "sourceFileName": "apply.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_apply = require(\"../../lib/patch/apply\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"../../lib/patch/parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_create = require(\"../../lib/patch/create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('patch/apply', function () {\n  describe('#applyPatch', function () {\n    it('should accept parsed patches', function () {\n      var patch =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      ('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line3\\n' + 'line5\\n', patch)).to.equal('line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line3\\n' + 'line5\\n', patch[0])).to.equal('line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should error if passed multiple indexes', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _apply\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        applyPatch)\n        /*istanbul ignore end*/\n        ('', [1, 2]);\n      }).to['throw']('applyPatch only works with a single input.');\n    });\n    it('should apply patches that change the last line', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line3\\n' + 'line5\\n', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal('line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\nline3\\nline4\\n', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + '+line5\\n')).to.equal('line2\\nline3\\nline4\\nline5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\nline2\\nline3\\nline4\\n', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '+line44\\n' + '-line4\\n')).to.equal('line1\\nline2\\nline3\\nline44\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\nline2\\nline3\\nline4\\n', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,5 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '+line44\\n' + '+line5\\n' + '-line4\\n')).to.equal('line1\\nline2\\nline3\\nline44\\nline5\\n');\n    });\n    it('should merge EOFNL', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\nline2\\nline3\\nline4\\n', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + '\\\\ No newline at end of file\\n' + '-line4\\n')).to.equal('line1\\nline2\\nline3\\nline4');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\nline2\\nline3\\nline4', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + '-line4\\n' + '\\\\ No newline at end of file\\n')).to.equal('line1\\nline2\\nline3\\nline4\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line11\\nline2\\nline3\\nline4', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + '+line1\\n' + '-line11\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + '\\\\ No newline at end of file\\n')).to.equal('line1\\nline2\\nline3\\nline4');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line11\\nline2\\nline3\\nline4\\nline4\\nline4\\nline4', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,5 +1,5 @@\\n' + '+line1\\n' + '-line11\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + ' line4\\n')).to.equal('line1\\nline2\\nline3\\nline4\\nline4\\nline4\\nline4'); // Test empty lines in patches\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line11\\nline2\\n\\nline4', 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + '+line1\\n' + '-line11\\n' + ' line2\\n' + '\\n' + ' line4\\n' + '\\\\ No newline at end of file\\n')).to.equal('line1\\nline2\\n\\nline4');\n    });\n    it('should apply patches', function () {\n      // Create patch\n      var oldFile = 'value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'remove value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'remove value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'value\\n' + 'context\\n' + 'context';\n      var newFile = 'new value\\n' + 'new value 2\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'add value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'new value\\n' + 'new value 2\\n' + 'context\\n' + 'context';\n      var diffFile = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n' + '@@ -1,5 +1,6 @@\\n' + '+new value\\n' + '+new value 2\\n' + '-value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '@@ -7,9 +8,8 @@\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '@@ -17,20 +17,21 @@\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '+add value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '+new value\\n' + '+new value 2\\n' + '-value\\n' + ' context\\n' + ' context\\n' + '\\\\ No newline at end of file\\n';\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      (oldFile, diffFile)).to.equal(newFile);\n      var identityFile = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n';\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      (oldFile, identityFile)).to.equal(oldFile);\n    });\n    it('should apply patches that lack an index header', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line3\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal('line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should fail on mismatch', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line2\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal(false);\n    });\n    it('should succeed within fuzz factor', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line2\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n', {\n        fuzzFactor: 1\n      })).to.equal('line2\\n' + 'line2\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should succeed when hunk needs a negative offset', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -3,2 +3,3 @@\\n' + ' line1\\n' + '+line2\\n' + ' line3\\n')).to.equal('line1\\n' + 'line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should succeed when hunk needs a positive offset', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\n' + 'line2\\n' + 'line3\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,2 +1,3 @@\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal('line1\\n' + 'line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should succeed when 1st hunk specifies invalid newStart', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\n' + 'line2\\n' + 'line3\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,2 +2,3 @@\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal('line1\\n' + 'line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should succeed when 2nd hunk specifies invalid newStart', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\n' + 'line2\\n' + 'line3\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,2 @@\\n' + ' line1\\n' + '-line2\\n' + ' line3\\n' + '@@ -3,2 +3,3 @@\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n')).to.equal('line1\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should create a file', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -0,0 +1,4 @@\\n' + '+line1\\n' + '+line2\\n' + '+line3\\n' + '+line4\\n')).to.equal('line1\\n' + 'line2\\n' + 'line3\\n' + 'line4\\n');\n    });\n    it('should erase a file', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line1\\n' + 'line2\\n' + 'line3\\n' + 'line4\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +0,0 @@\\n' + '-line1\\n' + '-line2\\n' + '-line3\\n' + '-line4\\n')).to.equal('');\n    });\n    it('should allow custom line comparison', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      ('line2\\n' + 'line2\\n' + 'line5\\n', '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n', {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        compareLine: function compareLine(lineNumber, line, operation, patchContent) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (lineNumber).to.be.a('number');\n\n          if (lineNumber === 2) {\n            /*istanbul ignore start*/\n            (0,\n            /*istanbul ignore end*/\n\n            /*istanbul ignore start*/\n            _chai\n            /*istanbul ignore end*/\n            .\n            /*istanbul ignore start*/\n            expect)\n            /*istanbul ignore end*/\n            (line).to.equal('line2');\n\n            /*istanbul ignore start*/\n            (0,\n            /*istanbul ignore end*/\n\n            /*istanbul ignore start*/\n            _chai\n            /*istanbul ignore end*/\n            .\n            /*istanbul ignore start*/\n            expect)\n            /*istanbul ignore end*/\n            (operation).to.equal(' ');\n\n            /*istanbul ignore start*/\n            (0,\n            /*istanbul ignore end*/\n\n            /*istanbul ignore start*/\n            _chai\n            /*istanbul ignore end*/\n            .\n            /*istanbul ignore start*/\n            expect)\n            /*istanbul ignore end*/\n            (patchContent).to.equal('line3');\n          }\n\n          return true;\n        }\n      })).to.equal('line2\\n' + 'line2\\n' + 'line4\\n' + 'line5\\n');\n    });\n    it('should work with unicode newline characters', function () {\n      var oldtext = 'AAAAAAAAAAAAAAAA\\n\\n';\n      var newtext = 'AAAAAAAAAAAAAAAA\\nBBBBBB' + String.fromCharCode(0x2028) + '\\nCCCCCCCCCCCCCCCCCC\\n\\n';\n      var diffed =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', oldtext, newtext);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      (oldtext, diffed)).to.equal(newtext);\n    });\n    it('handle empty text', function () {\n      var oldtext = '';\n      var newtext = 'asdasd\\n';\n      var diffed =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', oldtext, newtext);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      (oldtext, diffed)).to.equal(newtext);\n    });\n    it('handle two common text', function () {\n      var oldtext = 's';\n      var newtext = 'sdfsdf\\n';\n      var diffed =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', oldtext, newtext);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatch)\n      /*istanbul ignore end*/\n      (oldtext, diffed)).to.equal(newtext);\n    });\n  });\n  describe('#applyPatches', function () {\n    var patch = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n' + 'Index: test2\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' foo2\\n' + ' foo3\\n' + '+foo4\\n' + ' foo5\\n';\n    var contents = {\n      test: 'line2\\n' + 'line3\\n' + 'line5\\n',\n      test2: 'foo2\\n' + 'foo3\\n' + 'foo5\\n'\n    };\n    var expected = {\n      test: 'line2\\n' + 'line3\\n' + 'line4\\n' + 'line5\\n',\n      test2: 'foo2\\n' + 'foo3\\n' + 'foo4\\n' + 'foo5\\n'\n    };\n    it('should handle errors on complete', function (done) {\n      var expected = new Error();\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (patch, {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(undefined, contents[index.index]);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        patched: function patched(index, content, callback) {\n          callback(expected);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        complete: function complete(err) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (err).to.equal(expected).to.not.be.undefined;\n          done();\n        }\n      });\n    });\n    it('should handle multiple files', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (patch, {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(undefined, contents[index.index]);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        patched: function patched(index, content, callback) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (content).to.equal(expected[index.index]).to.not.be.undefined;\n          callback();\n        },\n        complete: done\n      });\n    });\n    it('should handle parsed patches', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (patch), {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(undefined, contents[index.index]);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        patched: function patched(index, content, callback) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (content).to.equal(expected[index.index]).to.not.be.undefined;\n          callback();\n        },\n        complete: done\n      });\n    });\n    it('should propagate errors', function (done) {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (patch, {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(new Error('foo'));\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        complete: function complete(err) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (err).to.match(/foo/);\n          done();\n        }\n      });\n    });\n    it('should handle patches without Index', function (done) {\n      var patch = '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n' + '===================================================================\\n' + '--- test2\\theader1\\n' + '+++ test2\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' foo2\\n' + ' foo3\\n' + '+foo4\\n' + ' foo5\\n';\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (patch, {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(undefined, contents[index.oldFileName]);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        patched: function patched(index, content, callback) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (content).to.equal(expected[index.newFileName]).to.not.be.undefined;\n          callback();\n        },\n        complete: done\n      });\n    });\n    it('should handle file names containing spaces', function (done) {\n      var patch =\n      /*istanbul ignore start*/\n      \"===================================================================\\n--- test file\\theader1\\n+++ test file\\theader2\\n@@ -1,2 +1,3 @@\\n line1\\n+line2\\n line3\\n===================================================================\\n--- test file 2\\theader1\\n+++ test file 2\\theader2\\n@@ -1,2 +1,3 @@\\n foo1\\n+foo2\\n foo3\\n\"\n      /*istanbul ignore end*/\n      ;\n      var contents = {\n        'test file':\n        /*istanbul ignore start*/\n        \"line1\\nline3\\n\"\n        /*istanbul ignore end*/\n        ,\n        'test file 2':\n        /*istanbul ignore start*/\n        \"foo1\\nfoo3\\n\"\n\n      /*istanbul ignore end*/\n      };\n      var expected = {\n        'test file':\n        /*istanbul ignore start*/\n        \"line1\\nline2\\nline3\\n\"\n        /*istanbul ignore end*/\n        ,\n        'test file 2':\n        /*istanbul ignore start*/\n        \"foo1\\nfoo2\\nfoo3\\n\"\n\n      /*istanbul ignore end*/\n      };\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _apply\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      applyPatches)\n      /*istanbul ignore end*/\n      (patch, {\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        loadFile: function loadFile(index, callback) {\n          callback(undefined, contents[index.oldFileName]);\n        },\n\n        /*istanbul ignore start*/\n\n        /*istanbul ignore end*/\n        patched: function patched(index, content, callback) {\n          /*istanbul ignore start*/\n          (0,\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          _chai\n          /*istanbul ignore end*/\n          .\n          /*istanbul ignore start*/\n          expect)\n          /*istanbul ignore end*/\n          (content).to.equal(expected[index.newFileName]).to.not.be.undefined;\n          callback();\n        },\n        complete: done\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205897
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/create.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/create.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/create.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/create.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
        "sourceFileName": "create.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_lib = require(\"../../lib\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_create = require(\"../../lib/patch/create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\nvar VERBOSE = false;\n\nfunction log() {\n  VERBOSE && console.log.apply(console, arguments);\n}\n\ndescribe('patch/create', function () {\n  describe('#createPatch', function () {\n    it('should handle files with the last line changed', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line2\\nline3\\nline5\\n', 'line2\\nline3\\nline4\\nline5\\n', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line2\\nline3\\nline4\\n', 'line2\\nline3\\nline4\\nline5\\n', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + '+line5\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4\\n', 'line1\\nline2\\nline3\\nline44\\n', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '+line44\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4\\n', 'line1\\nline2\\nline3\\nline44\\nline5\\n', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,5 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '+line44\\n' + '+line5\\n');\n    });\n    it('should output \"no newline\" at end of file message on new missing nl', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4\\n', 'line1\\nline2\\nline3\\nline4', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '+line4\\n' + '\\\\ No newline at end of file\\n');\n    });\n    it('should output \"no newline\" at end of file message on old missing nl', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4', 'line1\\nline2\\nline3\\nline4\\n', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '\\\\ No newline at end of file\\n' + '+line4\\n');\n    });\n    it('should output \"no newline\" at end of file message on both missing nl', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4', 'line1\\nline2\\nline3\\nline44', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + ' line1\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '\\\\ No newline at end of file\\n' + '+line44\\n' + '\\\\ No newline at end of file\\n');\n    });\n    it('should output \"no newline\" at end of file message on context missing nl', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line11\\nline2\\nline3\\nline4', 'line1\\nline2\\nline3\\nline4', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,4 @@\\n' + '-line11\\n' + '+line1\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + '\\\\ No newline at end of file\\n');\n    });\n    it('should output only one \"no newline\" at end of file message on empty file', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', '', 'line1\\nline2\\nline3\\nline4', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,0 +1,4 @@\\n' + '\\\\ No newline at end of file\\n' + '+line1\\n' + '+line2\\n' + '+line3\\n' + '+line4\\n' + '\\\\ No newline at end of file\\n');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line1\\nline2\\nline3\\nline4', '', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,4 +1,0 @@\\n' + '-line1\\n' + '-line2\\n' + '-line3\\n' + '-line4\\n' + '\\\\ No newline at end of file\\n');\n    });\n    it('should not output no newline at end of file message when eof outside hunk', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('test', 'line11\\nline2\\nline3\\nline4\\nline4\\nline4\\nline4', 'line1\\nline2\\nline3\\nline4\\nline4\\nline4\\nline4', 'header1', 'header2')).to.equal('Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,5 +1,5 @@\\n' + '-line11\\n' + '+line1\\n' + ' line2\\n' + ' line3\\n' + ' line4\\n' + ' line4\\n');\n    });\n    it('should diff large content blocks', function () {\n      var random = 42;\n      var mult = 134775813,\n          range = Math.pow(2, 32);\n\n      function nextRandom() {\n        random = (random * mult + 1) % range;\n        return random;\n      }\n\n      var largeTest = '.hbh9asgiidc {ehaahc9:ses;bhg9hc:ses;idgaag-hi9aa:cdca;ihgd9gdgca-gdadg:ighchehgaci;ggghdg:edhciag;daagsada:ahhhiaa;ahai7:hgid;}.hbh9asgiidc.hchgihaa {ggghdg:hgid;}.igiidchbh9ah {ihgd9gdgca-hbh9a:gga(' + 'hbh9ah/igiidcfhbh9ah.9hs);ihgd9gdgca-gaeahi:cd-gaeahi;7ah97i:7des;bhg9hc-gh97i:ses;ahai7:7des;ihgd9gdgca-edhhihdc:ses ses;}.igiidcfgde9 {ihgd9gdgca-edhhihdc:ses ses;}.bdghadaag .igiidcfgde9 {ihgd9gdgc' + 'a-edhhihdc:-7des ses;}.hchgihaa .igiidcfgde9 {ihgd9gdgca-edhhihdc:-dses ses;}.igiidcfaaaaia {ihgd9gdgca-edhhihdc:-bdes ses;}.bdghadaag .igiidcfaaaaia {ihgd9gdgca-edhhihdc:-9sses ses;}.hchgihaa .igiidc' + 'faaaaia {ihgd9gdgca-edhhihdc:-97des ses;}.igiidcfadacadha {ihgd9gdgca-edhhihdc:-9dses ses;}.bdghadaag .igiidcfadacadha {ihgd9gdgca-edhhihdc:-9bdes ses;}.hchgihaa .igiidcfadacadha {ihgd9gdgca-edhhihdc:' + '-7sses ses;}.igiidcfabhha {ihgd9gdgca-edhhihdc:-77des ses;}.bdghadaag .igiidcfabhha {ihgd9gdgca-edhhihdc:-7dses ses;}.hchgihaa .igiidcfabhha {ihgd9gdgca-edhhihdc:-7bdes ses;}.igiidcfbdaa {ihgd9gdgca-e' + 'dhhihdc:-d7des ses;}.bdghadaag .igiidcfbdaa {ihgd9gdgca-edhhihdc:-ddses ses;}.hchgihaa .igiidcfbdaa {ihgd9gdgca-edhhihdc:-dbdes ses;}.igiidcfcaasdaaag {ihgd9gdgca-edhhihdc:-abdes ses;}.bdghadaag .igii' + 'dcfcaasdaaag {ihgd9gdgca-edhhihdc:-bsses ses;}.hchgihaa .igiidcfcaasdaaag {ihgd9gdgca-edhhihdc:-b7des ses;}.igiidcfgachba {ihgd9gdgca-edhhihdc:-dbdes ses;}.bdghadaag .igiidcfgachba {ihgd9gdgca-edhhihd' + 'c:-9ssses ses;}.hchgihaa .igiidcfgachba {ihgd9gdgca-edhhihdc:-9s7des ses;}.igiidcfghh {ihgd9gdgca-edhhihdc:-9sdses ses;}.bdghadaag .igiidcfghh {ihgd9gdgca-edhhihdc:-9sbdes ses;}.hchgihaa .igiidcfghh {' + 'ihgd9gdgca-edhhihdc:-99sses ses;}.igiidcfh7hga {ihgd9gdgca-edhhihdc:-97bdes ses;}.bdghadaag .igiidcfh7hga {ihgd9gdgca-edhhihdc:-9hsses ses;}.hchgihaa .igiidcfh7hga {ihgd9gdgca-edhhihdc:-9h7des ses;}.i' + 'giidcfgeadha {ihgd9gdgca-edhhihdc:-9hdses ses;}.bdghadaag .igiidcfgeadha {ihgd9gdgca-edhhihdc:-9hbdes ses;}.hchgihaa .igiidcfgeadha {ihgd9gdgca-edhhihdc:-9gsses ses;}.igiidcfaaisdaaag {ihgd9gdgca-edhh' + 'ihdc:-9dsses ses;}.bdghadaag .igiidcfaaisdaaag {ihgd9gdgca-edhhihdc:-9d7des ses;}.hchgihaa .igiidcfaaisdaaag {ihgd9gdgca-edhhihdc:-9ddses ses;}.igiidcfabei9ighh7 {ihgd9gdgca-edhhihdc:-hsses ses;}.bdgh' + 'adaag .igiidcfabei9ighh7 {ihgd9gdgca-edhhihdc:-h7des ses;}.hchgihaa .igiidcfabei9ighh7 {ihgd9gdgca-edhhihdc:-hdses ses;}.igiidcfadgd {ihgd9gdgca-edhhihdc:-hbdes ses;}.bdghadaag .igiidcfadgd {ihgd9gdgc' + 'a-edhhihdc:-gsses ses;}.hchgihaa .igiidcfadgd {ihgd9gdgca-edhhihdc:-g7des ses;}.igiidcfbhch9a {ihgd9gdgca-edhhihdc:-gdses ses;}.bdghadaag .igiidcfbhch9a {ihgd9gdgca-edhhihdc:-gbdes ses;}.hchgihaa .igi' + 'idcfbhch9a {ihgd9gdgca-edhhihdc:-dsses ses;}.igiidcfcaaahdh {ihgd9gdgca-edhhihdc:-bdses ses;}.bdghadaag .igiidcfcaaahdh {ihgd9gdgca-edhhihdc:-bbdes ses;}.hchgihaa .igiidcfcaaahdh {ihgd9gdgca-edhhihdc:' + '-csses ses;}.igiidcfhhaahahgg7gahgaih {ihgd9gdgca-edhhihdc:-97sses ses;}.bdghadaag .igiidcfhhaahahgg7gahgaih {ihgd9gdgca-edhhihdc:-977des ses;}.hchgihaa .igiidcfhhaahahgg7gahgaih {ihgd9gdgca-edhhihdc:' + '-97dses ses;}.igiidcfhhaahahgg7 {ihgd9gdgca-edhhihdc:-997des ses;}.bdghadaag .igiidcfhhaahahgg7 {ihgd9gdgca-edhhihdc:-99dses ses;}.hchgihaa .igiidcfhhaahahgg7 {ihgd9gdgca-edhhihdc:-99bdes ses;}.igiidc' + 'fcaaidddbhgd {ihgd9gdgca-edhhihdc:-asses ses;}.bdghadaag .igiidcfcaaidddbhgd {ihgd9gdgca-edhhihdc:-a7des ses;}.hchgihaa .igiidcfcaaidddbhgd {ihgd9gdgca-edhhihdc:-adses ses;}.igiidcfdeac {ihgd9gdgca-ed' + 'hhihdc:-c7des ses;}.bdghadaag .igiidcfdeac {ihgd9gdgca-edhhihdc:-cdses ses;}.hchgihaa .igiidcfdeac {ihgd9gdgca-edhhihdc:-cbdes ses;}.igiidcfdaagaghia {ihgd9gdgca-edhhihdc:-9hdses ses;}.bdghadaag .igii' + 'dcfdaagaghia {ihgd9gdgca-edhhihdc:-9hbdes ses;}.hchgihaa .igiidcfdaagaghia {ihgd9gdgca-edhhihdc:-9gsses ses;}.igiidcfahaa {ihgd9gdgca-edhhihdc:-9g7des ses;}.bdghadaag .igiidcfahaa {ihgd9gdgca-edhhihdc' + ':-9gdses ses;}.hchgihaa .igiidcfahaa {ihgd9gdgca-edhhihdc:-9gbdes ses;}.igiidcfih9 {ihgd9gdgca-edhhihdc:-9dbdes ses;}.bdghadaag .igiidcfih9 {ihgd9gdgca-edhhihdc:-9asses ses;}.hchgihaa .igiidcfih9 {ihg' + 'd9gdgca-edhhihdc:-9a7des ses;}.igiidcfhgihgghia {ihgd9gdgca-edhhihdc:-9b7des ses;}.bdghadaag .igiidcfhgihgghia {ihgd9gdgca-edhhihdc:-9bdses ses;}.hchgihaa .igiidcfhgihgghia {ihgd9gdgca-edhhihdc:-9bbde' + 's ses;}.igiidcfhgeaggaaa {ihgd9gdgca-edhhihdc:-9csses ses;}.bdghadaag .igiidcfhgeaggaaa {ihgd9gdgca-edhhihdc:-9c7des ses;}.hchgihaa .igiidcfhgeaggaaa {ihgd9gdgca-edhhihdc:-9cdses ses;}.igiidcfggahiaha' + 'ghah {ihgd9gdgca-edhhihdc:-9csses ses;}.bdghadaag .igiidcfggahiahaghah {ihgd9gdgca-edhhihdc:-9c7des ses;}.hchgihaa .igiidcfggahiahaghah {ihgd9gdgca-edhhihdc:-9cdses ses;}.igiidcfggahiagagdgaghia9dg9 {' + 'ihgd9gdgca-edhhihdc:-9cbdes ses;}.bdghadaag .igiidcfggahiagagdgaghia9dg9 {ihgd9gdgca-edhhihdc:-9dsses ses;}.hchgihaa .igiidcfggahiagagdgaghia9dg9 {ihgd9gdgca-edhhihdc:-9d7des ses;}.igiidcfggahiagagdga' + 'sdaaag {ihgd9gdgca-edhhihdc:-9ddses ses;}.bdghadaag .igiidcfggahiagagdgasdaaag {ihgd9gdgca-edhhihdc:-9dbdes ses;}.hchgihaa .igiidcfggahiagagdgasdaaag {ihgd9gdgca-edhhihdc:-7ssses ses;}.igiidcfggahiaga' + 'gdga {ihgd9gdgca-edhhihdc:-7s7des ses;}.bdghadaag .igiidcfggahiagagdga {ihgd9gdgca-edhhihdc:-7sdses ses;}.hchgihaa .igiidcfggahiagagdga {ihgd9gdgca-edhhihdc:-7sbdes ses;}.igiidcfggahiae79hhghagagdga {' + 'ihgd9gdgca-edhhihdc:-79bdes ses;}.bdghadaag .igiidcfggahiae79hhghagagdga {ihgd9gdgca-edhhihdc:-77sses ses;}.hchgihaa .igiidcfggahiae79hhghagagdga {ihgd9gdgca-edhhihdc:-777des ses;}.igiidcfbhdagagdga {' + 'ihgd9gdgca-edhhihdc:-77dses ses;}.bdghadaag .igiidcfbhdagagdga {ihgd9gdgca-edhhihdc:-77bdes ses;}.hchgihaa .igiidcfbhdagagdga {ihgd9gdgca-edhhihdc:-7hsses ses;}.igiidcfggahiagagdgaaaghhdc {ihgd9gdgca-' + 'edhhihdc:-79sses ses;}.bdghadaag .igiidcfggahiagagdgaaaghhdc {ihgd9gdgca-edhhihdc:-797des ses;}.hchgihaa .igiidcfggahiagagdgaaaghhdc {ihgd9gdgca-edhhihdc:-79dses ses;}.igiidcfgaea9abhha {ihgd9gdgca-ed' + 'hhihdc:-7h7des ses;}.bdghadaag .igiidcfgaea9abhha {ihgd9gdgca-edhhihdc:-7hdses ses;}.hchgihaa .igiidcfgaea9abhha {ihgd9gdgca-edhhihdc:-7hbdes ses;}.igiidcfsdgahgaabhha {ihgd9gdgca-edhhihdc:-9b7des ses' + ';}.bdghadaag .igiidcfsdgahgaabhha {ihgd9gdgca-edhhihdc:-9bdses ses;}.hchgihaa .igiidcfsdgahgaabhha {ihgd9gdgca-edhhihdc:-9bbdes ses;}.igiidcfegiihgdabhha {ihgd9gdgca-edhhihdc:-7d7des ses;}.bdghadaag .' + 'igiidcfegiihgdabhha {ihgd9gdgca-edhhihdc:-7ddses ses;}.hchgihaa .igiidcfegiihgdabhha {ihgd9gdgca-edhhihdc:-7dbdes ses;}.igiidcfhhaa {ihgd9gdgca-edhhihdc:-7a7des ses;}.bdghadaag .igiidcfhhaa {ihgd9gdgc' + 'a-edhhihdc:-7adses ses;}.hchgihaa .igiidcfhhaa {ihgd9gdgca-edhhihdc:-7abdes ses;}.igiidcfhhaa {ihgd9gdgca-edhhihdc:-7a7des ses;}.bdghadaag .igiidcfhhaa {ihgd9gdgca-edhhihdc:-7adses ses;}.hchgihaa .igi' + 'idcfhhaa {ihgd9gdgca-edhhihdc:-7abdes ses;}.igiidcfaahi {ihgd9gdgca-edhhihdc:-h9shes ses;}.bdghadaag .igiidcfaahi {ihgd9gdgca-edhhihdc:-h97ces ses;}.hchgihaa .igiidcfaahi {ihgd9gdgca-edhhihdc:-h9dhes ' + 'ses;}.igiidcfhaagdaa {ihgd9gdgca-edhhihdc:-h9bces ses;}.bdghadaag .igiidcfhaagdaa {ihgd9gdgca-edhhihdc:-h7shes ses;}.hchgihaa .igiidcfhaagdaa {ihgd9gdgca-edhhihdc:-h77ces ses;}.igiidcfcaagdcihgi {ihgd' + '9gdgca-edhhihdc:-h7dhes ses;}.bdghadaag .igiidcfcaagdcihgi {ihgd9gdgca-edhhihdc:-h7bces ses;}.hchgihaa .igiidcfcaagdcihgi {ihgd9gdgca-edhhihdc:-hhshes ses;}.igiidcfcaa9gdge {ihgd9gdgca-edhhihdc:-hh7ce' + 's ses;}.bdghadaag .igiidcfcaa9gdge {ihgd9gdgca-edhhihdc:-hhdhes ses;}.hchgihaa .igiidcfcaa9gdge {ihgd9gdgca-edhhihdc:-hhbces ses;}.igiidcf7aae {ihgd9gdgca-edhhihdc:-hgshes ses;}.bdghadaag .igiidcf7aae' + ' {ihgd9gdgca-edhhihdc:-hg7ces ses;}.igiidcfagdebacg {ihgd9gdgca-edhhihdc:-hscces ses;ahai7:9ges;}.bdghadaag .igiidcfagdebacg {ihgd9gdgca-edhhihdc:-hsbges ses;}.hchgihaa .igiidcfagdebacg {ihgd9gdgca-ed' + 'hhihdc:-hscces ses;}.igiidcfighchsaghc {ihgd9gdgca-edhhihdc:-7bbdes ses;}.bdghadaag .igiidcfighchsaghc {ihgd9gdgca-edhhihdc:-7csses ses;}.hchgihaa .igiidcfighchsaghc {ihgd9gdgca-edhhihdc:-7c7des ses;}' + '.igiidcfhihgiadgdsada {ihgd9gdgca-edhhihdc:-hgdhes ses;}.bdghadaag .igiidcfhihgiadgdsada {ihgd9gdgca-edhhihdc:-hgbces ses;}.hchgihaa .igiidcfhihgiadgdsada {ihgd9gdgca-edhhihdc:-hdshes ses;}.igiidcfgas' + 'gah7 {ihgd9gdgca-edhhihdc:-hd7ces ses;}.bdghadaag .igiidcfgasgah7 {ihgd9gdgca-edhhihdc:-hddhes ses;}.hchgihaa .igiidcfgasgah7 {ihgd9gdgca-edhhihdc:-hdbces ses;}.igiidcfgadhaagdeids {ihgd9gdgca-edhhihd' + 'c:-hashes ses;}.bdghadaag .igiidcfgadhaagdeids {ihgd9gdgca-edhhihdc:-ha7ces ses;}.hchgihaa .igiidcfgadhaagdeids {ihgd9gdgca-edhhihdc:-hadhes ses;}.igiidcfdeacagdeids {ihgd9gdgca-edhhihdc:-habces ses;}' + '.bdghadaag .igiidcfdeacagdeids {ihgd9gdgca-edhhihdc:-hbshes ses;}.hchgihaa .igiidcfdeacagdeids {ihgd9gdgca-edhhihdc:-hb7ces ses;}.igiidcfcaaagdeids {ihgd9gdgca-edhhihdc:-hbdges ses;}.bdghadaag .igiidc' + 'fcaaagdeids {ihgd9gdgca-edhhihdc:-hbbdes ses;}.hchgihaa .igiidcfcaaagdeids {ihgd9gdgca-edhhihdc:-hcsges ses;}.igiidcfighh7gahidga {ihgd9gdgca-edhhihdc:-hc7des ses;}.bdghadaag .igiidcfighh7gahidga {ihg' + 'd9gdgca-edhhihdc:-hcdges ses;}.hchgihaa .igiidcfighh7gahidga {ihgd9gdgca-edhhihdc:-hcbdes ses;}.hgdchbh9ah {ihgd9gdgca-hbh9a:gga(hbh9ah/hgdcfhbh9ah.9hs);ihgd9gdgca-gaeahi:cd-gaeahi;7ah97i:77es;ahca-7a' + 'h97i:77es;bhg9hc-gh97i:ses;ahai7:7des;ihgd9gdgca-edhhihdc:ses ses;}.hgdcfidddbhgdggggaci {ihgd9gdgca-edhhihdc:-ses ses;}.hgdcfidddbhgdggggacif7daag {ihgd9gdgca-edhhihdc:-7des ses;}.hgdcfidddbhgdggggac' + 'ifhchgihaa {ihgd9gdgca-edhhihdc:-dses ses;}.hgdcfasehca {ihgd9gdgca-edhhihdc:-bdes ses;}.hgdcfasehcaf7daag {ihgd9gdgca-edhhihdc:-9sses ses;}.hgdcfbhch9aggggaci {ihgd9gdgca-edhhihdc:-97des ses;}.hgdcfb' + 'hch9aggggacif7daag {ihgd9gdgca-edhhihdc:-9dses ses;}.hgdcfbhch9aggggacifhchgihaa {ihgd9gdgca-edhhihdc:-9bges ses;}.hgdcfgasgah7ggggaci {ihgd9gdgca-edhhihdc:-7sses ses;}.hgdcfgasgah7ggggacifhchgihaa {i' + 'hgd9gdgca-edhhihdc:-ah9es ses;}.hgdcfgasgah7ggggacif7daag {ihgd9gdgca-edhhihdc:-77des ses;}.hgdcfidddbhgdh {ahai7:7ses;ihgd9gdgca-edhhihdc:-7dses ses;}.hgdcfidddbhgdhf7daag {ahai7:7ses;ihgd9gdgca-edhh' + 'ihdc:-7bses ses;}.hgdcfge {ahai7:7ses;ihgd9gdgca-edhhihdc:-7cdes ses;}.hgdcfgef7daag {ahai7:7ses;ihgd9gdgca-edhhihdc:-hsdes ses;}.hgdcfgefhchgihaa {ahai7:7ses;ihgd9gdgca-edhhihdc:-h7des ses;}.hgdcfhah' + 'gg7 {ihgd9gdgca-edhhihdc:-hgdes ses;}.hgdcfhahgg7fhchgihaa {ihgd9gdgca-edhhihdc:-asaes ses;}.hgdcfhahgg7f7daag {ihgd9gdgca-edhhihdc:-hbges ses;}.hgdcfgdaaheha {ihgd9gdgca-edhhihdc:-gaaes ses;}.hgdcfgd' + 'aahehaf7daag {ihgd9gdgca-edhhihdc:-gd9es ses;}.hgdcfaggdg {ihgd9gdgca-edhhihdc:-g9hes ses;7ah97i:9ges;}.hgdcf7aae {ihgd9gdgca-edhhihdc:-gh9es ses;7ah97i:9ces;}.hgdcfhcsd {ihgd9gdgca-edhhihdc:-ggdes se' + 's;7ah97i:9ges;}.hgdcfgddisdaaag {ihgd9gdgca-edhhihdc:-gades ses;7ah97i:7ses;}.hgdcfihgd {ihgd9gdgca-edhhihdc:-d9aes ses;ahai7 :7ses;}.hgdcfihgdf7daag {ihgd9gdgca-edhhihdc:-dhaes ses;ahai7 :7ses;}.hgdc' + 'fgadhafhahgg7 {ihgd9gdgca-edhhihdc:-ddaes ses;ahai7 :7des;}.hgdcfgadhafhahgg7f7daag {ihgd9gdgca-edhhihdc:-dc9es ses;ahai7:7des;}.gbhgdc {ihgd9gdgca-hbh9a:gga(hbh9ah/hgdchfaf.9hs);ihgd9gdgca-gaeahi:cd-' + 'gaeahi;7ah97i:7ses;bhg9hc-gh97i:ses;aagihgha-hah9c:bhaaaa;ahai7:7ses;ihgd9gdgca-edhhihdc:ses ses;}.haghah {ihgd9gdgca-edhhihdc:-ses ses;}.gagfghia9dg9 {ihgd9gdgca-edhhihdc:-7ses ses;}.gagfsdaaag {ihgd' + '9gdgca-edhhihdc:-gses ses;}.gagfsdaaagfhahhifsa {ihgd9gdgca-edhhihdc:-9gses ses;}.gagfsdaaagfahhedhaa {ihgd9gdgca-edhhihdc:-9ases ses;}.gagfsdaaagfsgd7ac {ihgd9gdgca-edhhihdc:-97ses ses;}.gagdgafe79hh' + 'gha {ihgd9gdgca-edhhihdc:-9sses ses;}.gagdgafabhha {ihgd9gdgca-edhhihdc:-cses ses;}.gagdga {ihgd9gdgca-edhhihdc:-ases ses;}.gagdgafhahhifsa {ihgd9gdgca-edhhihdc:-7sses ses;}.gagdgafahhedhaa {ihgd9gdgc' + 'a-edhhihdc:-77ses ses;}.gagdgafsgd7ac {ihgd9gdgca-edhhihdc:-9cses ses;}.gbhgdc {ihgd9gdgca-hbh9a:gga(hbh9ah/hgdchfaf.9hs);ihgd9gdgca-gaeahi:cd-gaeahi;7ah97i:7ses;bhg9hc-gh97i:ses;aagihgha-hah9c:bhaaaa' + ';ahai7:7ses;ihgd9gdgca-edhhihdc:ses ses;}.haghah {ihgd9gdgca-edhhihdc:-ses ses;}.gagfghia9dg9 {ihgd9gdgca-edhhihdc:-7ses ses;}.gagfsdaaag {ihgd9gdgca-edhhihdc:-gses ses;}.gagfsdaaagfhahhifsa {ihgd9gdg' + 'ca-edhhihdc:-9gses ses;}.gagfsdaaagfahhedhaa {ihgd9gdgca-edhhihdc:-9ases ses;}.gagfsdaaagfsgd7ac {ihgd9gdgca-edhhihdc:-97ses ses;}.gagdgafe79hhgha {ihgd9gdgca-edhhihdc:-9sses ses;}.gagdgafabhha {ihgd9' + 'gdgca-edhhihdc:-cses ses;}.gagdga {ihgd9gdgca-edhhihdc:-ases ses;}.gagdgafhahhifsa {ihgd9gdgca-edhhihdc:-7sses ses;}.gagdgafahhedhaa {ihgd9gdgca-edhhihdc:-77ses ses;}.gagdgafsgd7ac {ihgd9gdgca-edhhihd' + 'c:-9cses ses;}.shaahgdc {ihgd9gdgca-hbh9a:gga(hbh9ah/gdcghiachihdc.9hs);ihgd9gdgca-gaeahi:cd-gaeahi;7ah97i:7ses;bhg9hc-gh97i:ses;aagihgha-hah9c:bhaaaa;ahai7:7ses;ihgd9gdgca-edhhihdc:ses ses;}.shaa{ihg' + 'd9gdgca-edhhihdc:ses ses;}.shaafhggdihi{ihgd9gdgca-edhhihdc:-7ses ses;}.shaafheeaa{ihgd9gdgca-edhhihdc:-gses ses;}.shaafheeahghihdc{ihgd9gdgca-edhhihdc:-ases ses;}.shaafhgahd{ihgd9gdgca-edhhihdc:-cses' + ' ses;}.shaafasgaa{ihgd9gdgca-edhhihdc:-9sses ses;}.shaaf7iba{ihgd9gdgca-edhhihdc:-97ses ses;}.shaafhbh9a{ihgd9gdgca-edhhihdc:-9gses ses;}.shaafghah{ihgd9gdgca-edhhihdc:-9ases ses;}.shaafghahhgghei{ihg' + 'd9gdgca-edhhihdc:-9cses ses;}.shaafbhadga{ihgd9gdgca-edhhihdc:-7sses ses;}.shaafeei{ihgd9gdgca-edhhihdc:-77ses ses;}.shaafegdgagi{ihgd9gdgca-edhhihdc:-7gses ses;}.shaaffghgdihba{ihgd9gdgca-edhhihdc:-7' + 'ases ses;}.shaafiasi{ihgd9gdgca-edhhihdc:-7cses ses;}.shaafahaad{ihgd9gdgca-edhhihdc:-hsses ses;}.ahdh{ihgd9gdgca-edhhihdc:-hcses ses;}.shaafsba{ihgd9gdgca-edhhihdc:-h7ses ses;}.shaaf7he{ihgd9gdgca-ed' + 'hhihdc:-hgses ses;}.sdaaag{ihgd9gdgca-edhhihdc:-hases ses;}.shaafagdeids {ihgd9gdgca-edhhihdc:-gsses ses;}.aaaaiafhbhaa{ihgd9gdgca-edhhihdc:-ggses ses;ggghdg:edhciag;}.egiahgfh7hga{ihgd9gdgca-edhhihdc' + ':-gases ses;}.h7hga{ihgd9gdgca-edhhihdc:-gcses ses;}.eghahia{ihgd9gdgca-edhhihdc:-dsses ses;}.gddisdaaag{ihgd9gdgca-edhhihdc:-dcses ses;}.adacfhggda{ihgd9gdgca-edhhihdc:-a77es ses;ahai7:9ces;}.7aae{ih' + 'gd9gdgca-edhhihdc:-agses ses;}.ighh7 {ihgd9gdgca-edhhihdc:-acses ses;}.hggdafgh97i {ihgd9gdgca-edhhihdc:-bs7es ses;ahai7:9ces;}.igahagggbih {a7hia-hehga:cdaghe;}.igahagggbih .igahagggbihfgddi {aagihgh' + 'a-hah9c:bhaaaa;ehaahc9:s;}.igahagggbih .igahagggbihfhggda {aagihgha-hah9c:bhaaaa;ehaahc9-aasi:7es;}.igahagggbih .igahagggbihfahgchba {aagihgha-hah9c:bhaaaa;ehaahc9-aasi:7es;sdci-shbha9:aghha,aaaaaihgh' + ',hhch-haghs;sdci-hh7a:9ab;}.igahagggbih .igahagggbihfahgchba hcegi {ihgd9gdgca:ighchehgaci;idgaag:cdca;ehaahc9:ses;bhg9hc:ses;ahai7:9ss%;}a {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;}a:ahcd {iasi' + '-aagdghihdc:cdca;gdadg:#ssssss;}a:ahhhiaa {iasi-aagdghihdc:cdca;gdadg:#ssssss;}a:hgihaa {iasi-aagdghihdc:cdca;gdadg:#ssssss;}a:ahcd.iddaihgfigiidcfahcd {iasi-aagdghihdc:cdca;gdadg:#ssssss;}a:ahhhiaa.i' + 'ddaihgfigiidcfahcd  {iasi-aagdghihdc:cdca;gdadg:#ssssss;}a:hgihaa.iddaihgfigiidcfahcd  {iasi-aagdghihdc:cdca;gdadg:#ssssss;}a:7daag.iddaihgfigiidcfahcd  {iasi-aagdghihdc:cdca;gdadg:#ggbggg;ggghdg:edhc' + 'iag;}a:ahcd.aaaaa9fiasi {iasi-aagdghihdc:cdca;gdadg:#gggggg;sdci-hh7a:dd%;}a:ahhhiaa.aaaaa9fiasi {iasi-aagdghihdc:cdca;gdadg:#gggggg;sdci-hh7a:dd%;}a:hgihaa.aaaaa9fiasi {iasi-aagdghihdc:gcaagahca;gdad' + 'g:#ssssss;sdci-hh7a:dd%;}a:7daag.aaaaa9fiasi {iasi-aagdghihdc:cdca;gdadg:#ggbggg;sdci-hh7a:dd%;ggghdg:edhciag;}a:ahcd.aaaaa9fhgihaafhagihdc {iasi-aagdghihdc:cdca;gdadg:#gggggg;sdci-aah97i:idaa;sdci-hh' + '7a:dd%;}a:ahhhiaa.aaaaa9fhgihaafhagihdc {iasi-aagdghihdc:cdca;gdadg:#gggggg;sdci-aah97i:idaa;sdci-hh7a:dd%;}a:hgihaa.aaaaa9fhgihaafhagihdc {iasi-aagdghihdc:gcaagahca;gdadg:#ssssss;sdci-aah97i:idaa;sdc' + 'i-hh7a:dd%;}a:7daag.aaaaa9fhgihaafhagihdc {iasi-aagdghihdc:cdca;gdadg:#ggbggg;sdci-hh7a:dd%;sdci-aah97i:idaa;ggghdg:edhciag;}a:ahcd.aaaaa7fiasi {iasi-aagdghihdc:cdca;gdadg:#cdcdcd;}a:ahhhiaa.aaaaa7fia' + 'si {iasi-aagdghihdc:cdca;gdadg:#cdcdcd;}a:hgihaa.aaaaa7fiasi {iasi-aagdghihdc:gcaagahca;gdadg:#cdcdcd;}a:7daag.aaaaa7fiasi {iasi-aagdghihdc:gcaagahca;gdadg:#ggbggg;ggghdg:edhciag;}a:ahcd.aaaaahfiasi {' + 'iasi-aagdghihdc:cdca;gdadg:#cdcdcd;ahca-7ah97i:7ses;}a:ahhhiaa.aaaaahfiasi {iasi-aagdghihdc:cdca;gdadg:#cdcdcd;ahca-7ah97i:7ses;}a:hgihaa.aaaaahfiasi {iasi-aagdghihdc:gcaagahca;gdadg:#cdcdcd;ahca-7ah9' + '7i:7ses;}a:7daag.aaaaahfiasi {iasi-aagdghihdc:cdca;gdadg:#ggbggg;ggghdg:edhciag;ahca-7ah97i:7ses;}a:ahcd.gcaagahca {gdadg:#ssssss;iasi-aagdghihdc:gcaagahca;ggghdg:edhciag;}a:ahhhiaa.gcaagahca {gdadg:#' + 'ssssss;iasi-aagdghihdc:gcaagahca;}a:hgihaa.gcaagahca {iasi-aagdghihdc:gcaagahca;gdadg:#ssssss;}a:7daag.gcaagahca {iasi-aagdghihdc:gcaagahca;gdadg:#ggbggg;}.igahagggbih hcegi {ggghdg:edhciag;}.igahaggg' + 'bih hcegi:7daag.hchgihaa {ggghdg:aashgai;gdadg:#adadad;}a:7daag,a.sdggh,a:ahcd.sdggh,a:ahhhiaa.sdggh,a:7daag.sdggh,a:hgihaa.sdggh,.ihiehhi igiidc:7daag,.igahagggbih hcegi:7daag {iasi-aagdghihdc:cdca;g' + 'dadg:#ggbggg;ggghdg:edhciag;}h hb9 {idgaag:cdca;}ida9 {ehaahc9-gh97i:ses;ehaahc9-aasi:ses;ehaahc9-idiidb:ses;ehaahc9-ide:ses;bhg9hc-gh97i:ses;bhg9hc-aasi:ses;bhg9hc-ide:ses;bhg9hc-idiidb:ses;ihgd9gdgc' + 'a-gdadg:#gggggg;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:bg%;}ihiaa {sdci-hh7a:9ab;}ihiaa ihiaa {sdci-hh7a:9ss%;}.aasigadhi  {sadhi:aasi;}i  {sdci-aah97i:idaa;}.igiidc {sdci-shbha9:sh7d' + 'bh,aghha,aaaaaihgh,hhch-haghs;ehaahc9:des;iasi-hah9c:gaciag;sadhi:aasi;}.ihhhgsgiidc {ehaahc9:ses;bhg9hc:ses;idgaag-hi9aa:cdca;ihgd9gdgca-gdadg:ighchehgaci;ggghdg:edhciag;}.ihhhgsgiidc .igiidcfiasi {a' + 'hca-7ah97i:7ses;sdci-hh7a:9ab;}.ihhhgsgiidc.bdghadaag .igiidcfiasi {gdadg:#ggbggg;}.ihhhgsgiidc.hchgihaa .igiidcfiasi {gdadg:#sgsgsg;ggghdg:aashgai;}.aasifigiidc {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hh' + 'ch-haghs;sdci-hh7a:s.dab;ehaahc9-ide:des;ehaahc9-aasi:des;ehaahc9-gh97i:des;iasi-hah9c:gaciag;sadhi:aasi;bhc-ahai7:dses;}.gh97ifigiidc {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:s.dab;eh' + 'aahc9:des;iasi-hah9c:gaciag;sadhi:gh97i;}.gdagbcf7ahaag {sdci-aah97i:idaa;sdci-hh7a:dd%;ahca-7ah97i:9des;gdadg:#ssssss;ehaahc9-ide:7es;ehaahc9-aasi:7es;ehaahc9-gh97i:7es;a7hia-hehga:cdaghe;iasi-hah9c:' + 'aasi;}.hgdcfgdagbcf7ahaag {ehaahc9-aasi:7des;}.ahihfgda i7 {iasi-hah9c:aasi;sdci-aah97i:cdgbha;}.ahihfgda .cd7hih {iasi-hah9c:gaciag;}#idddbhgdfihiaa i7 h {ehaahc9-aasi:9ses;}.ahihfgda {7ah97i:7des;ih' + 'gd9gdgca-gdadg:#gggggg;}.ahihfahhi9dagbc    {ehaahc9-aasi:des;ehaahc9-gh97i:des;ahca-7ah97i:7des;}.agdeadac {idgaag-idiidb:9es iahgd;idgaag-gh97i:9es iahgd;idgaag-aasi:9es #9s9s9s;idgaag-ide:9es #9s9s' + '9s;ahhhihahi9:7haaac;edhhihdc:hihdagia;ahai7:7sses;7-hcaas:9;ehaahc9:ses;ggghdg:edhciag;}.haaagi {ihgd9gdgca-gdadg:#g9gdga;sadhi:aasi;}haaagi.gghiaghh {sdci-hh7a:s.dab;ahai7:9cses;}.hbhaa {sdci-hh7a:d' + 'd%;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;}.ihiaaaehgag  {ahai7:7ses;}.iasihcegi  {ehaahc9:des;bhg9hc:ses;aagihgha-hah9c:ide;}i7 {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-aah97i:idaa;' + 'sdci-hh7a:dd%;}.ihiaa  {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;sdci-aah97i:idaa;}.ahaga  {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;}.aaaaafiddaihg {gaahg:idi7;a' + 'hai7:hgid;7ah97i:gces;ihgd9gdgca-gdadg:#d77ahc;}.iddaihgfaasi {sadhi:aasi;ahai7:hgid;iasi-hah9c:gaciag;}.iddaihgfgh97i {sadhi:gh97i;ahai7:hgid;iasi-hah9c:gaciag;}aha.iddaihg {sadhi:aasi;}.iddaihgfid9f' + 'aasi {sadhi:aasi;}.iddaihgfid9 {gdadg:#ssssss;sadhi:aasi;}.iddaihgfid9fgh97i {sadhi:aasi;}.iddaihgfigiidc {sadhi:aasi;iasi-hah9c:gaciag;ggghdg:edhciag;ehaahc9:ces ses ces ses;bhg9hc:ses;idgaag:ses cdc' + 'a;ihgd9gdgca-gdadg:ighchehgaci;}.iddaihgfigiidc.hchgihaa {ggghdg:hgid;}.iddaihgfigiidcfhgdc {gaahg:gh97i;sadhi:cdca;bhg9hc-aasi:hgid;bhg9hc-gh97i:hgid;idgaag:ses;}.iddaihgfigiidc .igiidcfiasi,.iddaihg' + 'figiidc hehc {ahheah9:iadgd;sdci-hh7a:s.cab;ehaahc9-aasi:des;ehaahc9-gh97i:des;sdci-shbha9:aghha,aaaaaihgh,hhch-haghs;ahca-7ah97i:s.cab;iasi-aagdghihdc:cdca;}.iddaihgfigiidc.bdghadaag .igiidcfiasi {gd' + 'adg:#ggbggg;}.iddaihgfigiidc.hchgihaa .igiidcfiasi {gdadg:9gh9;}.iicfahih9dcigdafaasi  {sadhi:aasi;ehaahc9-aasi:des;}.cdaghe,.cdaghe ia,.iaehiaa {a7hia-hehga:cdaghe;}ihiaa.cdaghe,ihiaa.cdaghe ig,ia.ag' + 'he {a7hia-hehga:cdgbha;}.ihifhbhaafaasi {sadhi:aasi;}.ihifhbhaafgh97i  {sadhi:aasi;}.ihifhbhaafid9  {sadhi:aasi;sdci-hh7a:dd%;}.ihifhbhaafid9 h {ahca-7ah97i:7ses;ehaahc9-ide:7es;}.ihifhbhaafdssfaasi {' + 'sadhi:aasi;ahai7:7ses;ehaahc9-ide:7es;}.ihifhbhaafdssfgh97i  {sadhi:aasi;ehaahc9-ide:7es;}.ihifhbhaafdssfid9  {sadhi:aasi;sdci-hh7a:dd%;ehaahc9-ide:7es;}aha.ihifhbhaa {idgaag-aasi:9es hdaha #7a77hh;id' + 'gaag-gh97i:9es hdaha #7a77hh;idgaag-idiidb:9es hdaha #7a77hh;}aha.aaaaa9 {ahai7:hgid;gaahg:idi7;}aha.aaaaa9faasi  {sadhi:aasi;ehaahc9-aasi:des;ehaahc9-ide:7es;ehaahc9-idiidb:7es;7ah97i:9ges;}aha.aaaaa' + '9fgh97i {sadhi:gh97i;ehaahc9-aasi:des;ehaahc9-ide:7es;ehaahc9-idiidb:7es;7ah97i:9ges;}.aaaaa9fiasi {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;gdadg:#gggggg;sdci-hh7a:dd%;ehaahc9-aasi:7es;ehaahc9-g' + 'h97i:7es;}.aaaaa9fad9hc {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;gdadg:#gggggg;sdci-hh7a:dd%;sdci-aah97i:idaa;ehaahc9-aasi:des;ehaahc9-gh97i:des;}.aaaaa9fad9dgi {bhg9hc-gh97i:7es;}aha.ad9d  {sad' + 'hi:aasi;}.aaaaa7fiasi {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;gdadg:#i7i7i7;sdci-aah97i:idaa;ehaahc9-aasi:des;ehaahc9-gh97i:des;ahca-7ah97i:hhes;}.aaaaafadghihdc {gaahg:idi7;ahai7:hgid;7ah97i:7' + 'ces;ihgd9gdgca-gdadg:#d77ahc;edhhihdc:gaahihaa;}.adghihdcfaasi {bhg9hc-aasi:hes;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;}.aaaaafigahagggbi {gaahg:idi7;ahai7:hgid;7ah97i:7ces;ihgd9g' + 'dgca-gdadg:#d77ahc;}.igahagggbifaasi {ahai7:hgid;bhg9hc-gh97i:7dses;}.igahagggbifgh97i {sadhi:gh97i;ahai7:hgid;ahai7:7gces;}.igahagggbifigiidc {sadhi:aasi;bhg9hc-aasi:ses;bhg9hc-gh97i:ses;bhg9hc-ide:9' + 'es;ggghdg:edhciag;7ah97i:7ces;ihgd9gdgca-gdadg:ighchehgaci;idgaag:cdca;ehaahc9:ses;}.igahagggbifhbh9a {bhg9hc-aasi:hes;bhg9hc-gh97i:hes;bhg9hc-ide:9es;ggghdg:edhciag;7ah97i:7ces;idgaag:cdca;}.igahaggg' + 'bifehi7fgdcihhcag {ihgd9gdgca-gdadg:a7hia;ahai7:hgid;ehaahc9-ide:ses;ehaahc9-idiidb:ses;}.igahagggbihcah {ahai7:bes;7ah97i:7ces;ihgd9gdgca-gdadg:#d77ahc;}.igahagggbifehi7figiidc {sadhi:aasi;bhg9hc-gh9' + '7i:9es;bhg9hc-ide:9es;bhg9hc-aasi:ses;}.cdsdgaag {idgaag:cdca;}.igahagggbifehi7fahcd {idgaag:cdca;}.igahagggbifehi7 {sadhi:aasi;}.igahagggbifehi7faasi,.igahagggbifehi7fgh97i {sdci-shbha9:sh7dbh,aghha,' + 'aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;}.igahagggbifehi7fiasi {iasi-aagdghihdc:cdca;gdadg:#ssssss;sdci-hh7a:s.dab;ahca-7ah97i:7ges;bhg9hc-aasi:hes;}.hahgg7fehi7fgdcihhcag7 {sadhi:gh97i;ihgd9gdgca-gdadg:a7' + 'hia;gdadg:9gh9;ehaahc9-ide:ses;ehaahc9-idiidb:ses;7ah97i:7ges;idgaag:7es hdaha #d77ahc;}.hahgg7fhcegi7 {sadhi:aasi;ahai7:9gces;aagihgha-hah9c:bhaaaa;bhg9hc-aasi:9es;idgaag:7es hdaha a7hia;ihgd9gdgca-g' + 'dadg:a7hia;}#hahgg7iasi {sdci-shbha9:sh7dbh,dacaah,hhch-haghs;sdci-hh7a:9ab;}#hahgg7sddaihg {sdci-hh7a:9ab;}.hahgg7fehi7figiidc {sadhi:aasi;bhg9hc-aasi:ses;bhg9hc-ide:9es;bhg9hc-gh97i:9es;ggghdg:edhci' + 'ag;idgaag:cdca;}.ahgagidg9fehi7  {sadhi:aasi;}aha.ehi7faasi,aha.ehi7fgh97i {sadhi:aasi;sdci-aah97i:cdgbha;bhg9hc:ses;ahca-7ah97i:7des;ihgd9gdgca-gdadg:#d77ahc;}aha.ggggacifehi7figiidch  {ihgd9gdgca-gd' + 'adg:#d77ahc;sadhi:aasi;}aha.idddbhgdh {sadhi:aasi;ihgd9gdgca-gdadg:#d77ahc;7ah97i:7des;ahca-7ah97i:7des;}ga.idddbhgd {ihgd9gdgca-gdadg:#gsg9g9;}ah.idddbhgd {ahhi-hi9aa:cdca;ehaahc9-aasi:des;ehaahc9-id' + 'e:7es;ehaahc9-idiidb:ses;ehaahc9-gh97i:des;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:s.dab;}ah.bhch9afidddbhgdh {ahhi-hi9aa:cdca;ehaahc9-aasi:des;ehaahc9-ide:7es;ehaahc9-idiidb:ses;ehaah' + 'c9-gh97i:des;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;idgaag-ide:9es hdaha #7d7d7d;sdci-hh7a:s.dab;}aha.hahgg7  {sadhi:aasi;ahai7:hgid;ihgd9gdgca-gdadg:#d77ahc;}aha.9dd9aafhahgg7 {sadhi:gh97i;ihg' + 'd9gdgca-gdadg:#d77ahc;}aha.hahgg7fids  {sdci-aah97i:cdgbha;bhg9hc:ses;ahca-7ah97i:7des;sadhi:aasi;ihgd9gdgca-gdadg:#d77ahc;}.bacg {idgaag-idiidb:9es hdaha #cscscs;idgaag-gh97i:9es hdaha #cscscs;idgaag' + '-ide:9es hdaha #gggggg;idgaag-aasi:9es hdaha #gggggg;ihgd9gdgca-gdadg:#gggggg;sdci-shbha9:aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:s.dab;ehaahc9:ses;}aha.shaafbhch9ag  {ehaahc9:ses;ihgd9gdgca-gdadg:#s7sca' + '7;idgaag:9es hdaha #sgsgsg;ahai7:9ss%;sadhi:aasi;}aha.sddiag  {ahai7:hgid;sadhi:gh97i;ehaahc9-ide:7es;ehaahc9-idiidb:ses;}aha.bahhh9a {sadhi:aasi;sdci-aah97i:cdgbha;sdci-hh7a:dd%;gdadg:iahgd;bhg9hc:se' + 's;ahca-7ah97i:77es;ahai7:hgid;ehaahc9:7es;}.gh97ifgahgd {idgaag:9es hdaha #9s9s9s;ihgd9gdgca-gdadg:#gsgggg;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:s.dab;ahhhihahi9:7haaac;edhhihdc:hihd' + 'agia;ahai7:97ses;7-hcaas:9;ehaahc9:9ses;ggghdg:edhciag;}aha.ehgdehhi {ihgd9gdgca-gdadg:#gggggg;idgaag:9es hdaha #b99h7h;ehaahc9:des;}aha.ehgdehhiagah {gaahg:idi7;ehaahc9:9ses;}.bhch9afeh9a {ihgd9gdgca' + '-gdadg:#ghghgh;}.gdbbaci {edhhihdc:gaahihaa;bhg9hc-ide:7es;ehaahc9:9ses;gaahg:gh97i;}.aaac9dbbaci {ihgd9gdgca:#gggggg;}.daa9dbbaci {ihgd9gdgca-gdadg:#ghghgh;idgaag-ide:#sgsgsg;idgaag-idiidb:#sgsgsg;}.' + 'haa9dbbaciagah {bhg9hc-idiidb:des;}.gdbbaciagi7dg {sdci-hh7a:9ab;sdci-aah97i:idaa;ehaahc9-idiidb:des;}.gdbbacisasi {sdci-hh7a:dd%;ehaahc9-idiidb:9es;}.gdbbacishbahihbe {sdci-hh7a:s.cab;}.gdbbaci7aaaia' + '97agdids {edhhihdc:hihdagia;gh97i:9ses;ide:9ses;ggghdg:edhciag;}aha.eh9afihiaa  {gaahg:idi7;ahai7:hgid;}aha.hhaafchah9hihdc {bhg9hc-ide:ses;}ia.hhaafchah9hihdc {ihgd9gdgca-hbh9a:gga(hi9aah/hhaafchafid' + '9.ge9);ihgd9gdgca-gaeahi:gaeahi-s;ahai7:9bdes;idgaag-gh97i:9es hdaha #sgsgsg;}.ihiehhi {bhg9hc-aasi:7ses;bhg9hc-ide:7ses;bhg9hc-idiidb:7ses;ehaahc9-aasi:9bes;}.ihiehhi igiidc {ihgd9gdgca-gdadg:ighcheh' + 'gaci;idgaag:ses cdca;bhg9hc:ses;ehaahc9:ses;ggghdg:edhciag;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;iasi-hah9c:aasi;}.ihiehhi ah {ehaahc9-aasi:ses;ehaahc9-ide:ses;ehaahc9-gh97i:ses;' + 'ehaahc9-idiidb:ges;ahhi-hi9aa-i9ea:cdca;sdci-hh7a:s.dab;}.aaihfhiabfhgihaa {ahhi-hi9aa-hbh9a:gga(hbh9ah/haaagiaafhgihdc.9hs);}.aaihfhiabfhgihaa igiidc {sdci-aah97i:idaa;}aha.gh97ifeh9afgdciaci  {ahai7' + ':hgid;ihgd9gdgca-gdadg:a7hia;}aha.hbhaafhgifiddaihg {ihgd9gdgca-gdadg:#9s9s9s;7ah97i:7des;ehaahc9-idiidb:des;}aha.hgifigiidc  {sdci-hh7a:s.dab;ehaahc9-aasi:7es;ehaahc9-gh97i:7es;sadhi:aasi;iasi-hah9c:' + 'gaciag;}aha.eh9afihiaa  {bhg9hc:ses;}.eh9afihiaa hcegi,.eh9afihiaa hgibhi,.eh9afihiaa haaagi,.eh9afihiaa iasihgah,.sdgbfgdciaci iasihgah {sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;}a' + 'ha.eh9afahih {bhg9hc:9ses;sadhi:aasi;}aha.bdahafsdgb  {idgaag:9es hdaha #a9a9a9;bhc-ahai7:gases;}aha.sdgbfgdciaci  {bhg9hc:7as;gaahg:idi7;ahai7:hgid;}.sdgbfgdciaci h {sdci-hh7a:9ab;}aha.sdgbfihiaafihg' + '  {idgaag-aasi:9es hdaha #b99h7h;idgaag-gh97i:9es hdaha #b99h7h;gaahg:idi7;}.sdgbfihiaafiasi  {ahca-7ah97i:7aes;sdci-shbha9:sh7dbh,aghha,aaaaaihgh,hhch-haghs;sdci-hh7a:9ab;sdci-aah97i:idaa;gdadg:#hhhh' + 'hh;sdci-aah97i:idaa;aagihgha-hah9c:ihhaahca;bhg9hc:ses;ehaahc9-aasi:des;}.iicfeh9a9dcigdafaasi  {ehaahc9-ide:ges;sadhi:aasi;}.iicfeh9a9dcigdafgh97i {ehaahc9-ide:ges;sadhi:gh97i;}aha.sdgbfgdcigdah {gaa' + 'hg:idi7;}aha.ghahdfigiidch  {ehaahc9:des;}.aaig9sdgaag {idgaag:9es hdaha gaa;}.aaig9 {idgaag:9es hdaha #iii;}.haahcgaafhahgg7  {ahai7:hgid;gaahg:idi7;bhg9hc:9ses;ihgd9gdgca-gdadg:#ac7ahs;edhhihdc:gaah' + 'ihaa;}aha.hahgg7fid9  {edhhihdc:gaahihaa;ihgd9gdgca-gdadg:#h9h9h9;idgaag-idiidb:7es hdaha #d9a9sb;}.hahgg7fgdcihhcag {ahai7:hgid;bhg9hc-aasi:7ses;ehaahc9-ide:9ses;}aha.hahgg7fgefaasifgdgcag  {sadhi:aa' + 'si;}aha.hahgg7fgefgh97ifgdgcag {sadhi:gh97i;}.hahgg7fihiaa {sdci-hh7a:dd%;sdci-aah97i:idaa;ehaahc9-aasi:des;ehaahc9-ide:des;}.hahgg7fgghiaghh {ehaahc9-aasi:9ses;ehaahc9-gh97i:ses;ehaahc9-ide:des;sdci-' + 'hh7a:dd%;ihgd9gdgca-gdadg:#gggggg;idgaag:9es hdaha #sgsgsg;}aha.hahgg7figiidcfgda {ehaahc9-ide:des;idgaag-ide:9es hdaha #sgsgsg;sadhi:aasi;ahai7:9ss%;}aha.hahgg7figiidcfgdcihhcag {sadhi:gh97i;}aha.hah' + 'gg7fhaa9ghiaghhfgda {idgaag-idiidb:9es hdaha #sgsgsg;sadhi:aasi;ahai7:9ss%;7ah97i:7des;}aha.hahgg7fgghiaghhfgdcihhcag {idgaag:7es hdaha #d9a9sb;ehaahc9:des;}.hgdcehiaafiasi {sadhi:aasi;bhg9hc:ses;7ah9' + '7i:7des;ahca-7ah97i:7des;ehaahc9-gh97i:des;sdci-hh7a:dd%;sdci-aah97i:idaa;}aha.hgdc    {ahai7:7des;7ah97i:7des;sadhi:aasi;}a:ahcd.hahgg79ghiaghhfiasi {iasi-aagdghihdc:gcaagahca;gdadg:#ssssss;sdci-hh7a' + '{sadhi:aasi;ahhi-hi9aa:cdca;bhg9hc-ide:hes;}.7aae9dcihhcag {edhhihdc:hihdagia;ide:7es;gh97i:7es;bhg9hc:ses;ehaahc9:ses;idgaag:ses cdca;7-hcaas:g;ggghdg:edhciag;ahhhihahi9:hc7aghi;ihgd9gdgca-gdadg:ighc' + 'hehgaci;}.7aae9dcihhcagaihihg {bhg9hc:ses;ehaahc9:ses;ggghdg:edhciag;ahhhihahi9:hc7aghi;}.9gh-bdagaa .7aae9dcihhcag {gh97i:ges;}.9gh-ahhad9 .9gh-ehcaa .7aae9dcihhcag {gh97i:7ses;}.sdgb7hih  {sdci-hh7a' + ':9ab;}ihiaa.cdihs9shiaa {idgaag:ses;}ihiaa.cdihs9shiaa .aasi9dagbc {iasi-hah9c:gh97i;aagihgha-hah9c:ide;sdci-aah97i:idaa;}ihiaa.cdihs9shiaa .gh97i9dagbc {iasi-hah9c:aasi;}ihiaa.hgeagihiaa {bhg9hc:s s ' + 's 7es;}ihiaa.hgeagihiaa iida9 ig ia.geadhaf7ahaag {idgaag-ide:9es hdaha g9i(9g7,9g7,9g7);idgaag-gh97i:9es hdaha g9i(9g7,9g7,9g7);idgaag-idiidb:cdca;idgaag-aasi:9es hdaha g9i(9g7,9g7,9g7);ihgd9gdgca:g9' + 'i(77d,77d,77d);ehaahc9:s;sdci-hh7a:s;7ah97i:hses;}ihiaa.hgeagihiaa iida9 ig ia.geadhaf7ahaag ihiaa {sdci-aah97i:ass;sdci-hh7a:9ab;ihgd9gdgca:ighchehgaci;gdadg:iahgd;ahai7:9ss%;bhg9hc:s;}ihiaa.hgeagihi' + 'aa iida9 ig ia.gdcihhchfgeadha {bhg9hc:s;ehaahc9-aasi:s;}aha.geadha {bhg9hc:s;ehaahc9:s;daagsada:hgid;7ah97i:7hses;ahai7:asses;idgaag:9es hdaha g9i(9g7,9g7,9g7);ihgd9gdgca:a7hia;}aha.geadha ihiaa {7ah' + '97i:9ss%;idgaag:cdca;}.geadha-daagaghia {}aha.geadha ihiaa iida9 ig {7ah97i:7des;}aha.geadha ihiaa iida9 ig#geadhafiahcdgda {7ah97i:hgid;}.geadhafsddiag {idgaag-ide:cdca;idgaag-gh97i:9es hdaha g9i(9g7' + ',9g7,9g7);idgaag-idiidb:9es hdaha g9i(9g7,9g7,9g7);idgaag-aasi:9es hdaha g9i(9g7,9g7,9g7);7ah97i:hses;ihgd9gdgca:g9i(77d,77d,77d);}.iaehiaa {sdci-aah97i:idaa;}.ihiaaf7ahaag {sdci-aah97i:idaa;sdci-hh7a' + ':9ab;gdadg:#ssssss;ahca-7ah97i:7hes;ahai7:9ss%;}.gh97ifihiaaf7ahaag {ahca-7ah97i:7hes;ahai7:hes;sdci-aah97i:idaa;gdadg:#ssssss;sdci-hh7a:9ab;}.aasifihiaaf7ahaag {ahca-7ah97i:7hes;ahai7:ges;sdci-aah97i' + '{ihgd9gdgca-gdadg:#gggggg;ia77bgd-abdas:ses;ia77bgd-ehgs:ses;ia77bgd-shsshf:ses;ia77bgd-shi:hces;faadbg-abdas:des;faadbg-ehgs:des;faadbg-shi:hces;faadbg-shsshf:ses;ghgs-abah:9ss%;}.aabhcfhaiahiaa    {' + 'sdci-hh7a:9ab;}#shaahgdgb {edhhihdc:hihdagia;ide:ses;aasi:ses;ahai7:ses;7ah97i:ses;}.aaaaafhgiihih    {ihgd9gdgca-gdadg:#gggggg;7ah97i:7ses;}.gdagbcf7ahaagfadc9 {sdci-hh7a:dd%;7ah97i:hses;gdadg:#sssss' + 's;}aha.ihifhaafeagbhhhhdch,aha.ihifihhhgfeagbhhhhdch {sadhi:aasi;ahai7:hgid;iasi-hah9c:gaciag;}aha.eagbhhhhdchbhhaehhi {bhg9hc:ses;ehaahc9-aasi:7ses;ehaahc9-ide:des;ehaahc9-idiidb:des;}aha.eagbhhhhdch' + 'bhhaehhi ga {bhg9hc:ses;ehaahc9:ses ses ses 9ses;}aha.hgdcehiaafiasi {sadhi:aasi;bhg9hc:ses;7ah97i:7des;ahca-7ah97i:7des;ehaahc9-gh97i:des;sdci-aah97i:idaa;}aha.hgdc    {ahai7:7des;7ah97i:7des;sadhi:a' + 'asi;}a.ahia {gdadg:#ggssss;sdci-aah97i:cdgbha;}a:ahhhiaa.ahia {gdadg:#ggssss;sdci-aah97i:cdgbha;}a:7daag.ahia {gdadg:#ggssss;sdci-aah97i:cdgbha;}a:hgihaa.ahia {gdadg:#ggssss;sdci-aah97i:cdgbha;}.ahia' + '{9heha:#ggssss;ghgs-hhbdas:idaa;}.gh97ifiddaihg {sadhi:gh97i;ehaahc9-gh97i:des;}aha.asfhahgg7fid9  {bhg9hc-aasi:hes;bhg9hc-gh97i:hes;bhg9hc-idiidb:9ses;idgaag-idiidb:7es hdaha #d9a9sb;}.asfhahgg7  {ah' + 'ai7:hgid;gaahg:idi7;7ah97i:9hses;ehaahc9-ide:ses;bhg9hc:ses;ihgd9gdgca-gdadg:#d77ahc;}aha.asfhahgg7faasiaca  {sadhi:aasi;}aha.asfhahgg7fgh97iaca {sadhi:gh97i;}.ahih h {sdci-hh7a:9ab;}.asfhahgg7fgdcihh' + 'cag {sadhi:aasi;bhg9hc-ide:des;}ia.asfhahgg7fiasi {sdci-hh7a:s.dab;}.asfhahgg7fiasi hcegi {sdci-hh7a:s.dab;}.asfhahgg7fiasi haaagi {sdci-hh7a:s.dab;}ia.asfihiaaaehgag {ahai7:9ses;}.asfihiaa9aaa {ehaah' + 'c9-aasi:9ses;ehaahc9-gh97i:des;}aha.hgihdcfhiae {ehaahc9-ide:7es;ehaahc9-idiidb:7es;ehaahc9-aasi:des;ehaahc9-gh97i:9ses;bhg9hc-gh97i:9des;ihgd9gdgca-gdadg:a7hia;idgaag-idiidb:7es dgihai;idgaag-gh97i:7' + 'es dgihai;ahai7:dd%;}aha.aaghhhdcfhiae  {ehaahc9-ide:7es;ehaahc9-idiidb:7es;ehaahc9-aasi:des;ehaahc9-gh97i:des;ihgd9gdgca-gdadg:a7hia;idgaag-idiidb:7es dgihai;idgaag-gh97i:7es dgihai;ahai7:dd%;}aha.i7' + 'ac  {ihgd9gdgca:#hhgggh;ehaahc9-ide:7es;ehaahc9-idiidb:7es;ehaahc9-aasi:7es;ehaahc9-gh97i:des;idgaag-idiidb:7es dgihai;idgaag-gh97i:7es dgihai;ahai7:dd%;}aha.i7acfida9 {ehaahc9-ide:des;ehaahc9-idiidb:' + 'des;ehaahc9-aasi:9ses;ehaahc9-gh97i:des;ahai7:dd%;}aha.aaha {ihgd9gdgca:#hhgggh;ehaahc9-ide:7es;ehaahc9-idiidb:7es;ehaahc9-aasi:7es;ehaahc9-gh97i:des;idgaag-idiidb:7es dgihai;idgaag-gh97i:7es dgihai;a' + 'hai7:dd%;}aha.aahafida9 {ehaahc9-ide:des;ehaahc9-idiidb:des;ehaahc9-aasi:9ses;ehaahc9-gh97i:des;ahai7:dd%;}aha.haafhiae {ehaahc9-ide:9ses;ehaahc9-idiidb:9ses;iasi-hah9c:gaciag;}aha.casifhiae  {ihgd9gd' + 'gca:#hhgggh;ehaahc9-ide:7es;ehaahc9-idiidb:7es;ehaahc9-aasi:7es;ehaahc9-gh97i:des;idgaag-idiidb:7es dgihai;idgaag-gh97i:7es dgihai;ahai7:dd%;}aha.hsfida9 {ehaahc9-ide:des;ehaahc9-idiidb:des;ehaahc9-aa' + 'si:9ses;ehaahc9-gh97i:des;ahai7:dd%;}aha.ehghbaiagh {ehaahc9-ide:des;ehaahc9-idiidb:des;ehaahc9-aasi:9ses;ehaahc9-gh97i:des;ahai7:dd%;}aha.eh9afida9  {ehaahc9-ide:9ses;ehaahc9-aasi:9ses;}aha.h7dgifhgi' + 'hdcfchba  {sdci-hh7a:9ss%;}aha.h7dgifaaghhhdcfchba  {sdci-hh7a:9ss%;}.gahaagfcdihshghihdc {ahheah9:cdca;}.gahaaghaabaci {edhhihdc:hihdagia;ide:-9es;aasi:-9ses;7ah97i:9es;ahca-7ah97i:9es;idgaag:cdca;eh' + 'aahc9:ses;bhg9hc:ses;ahai7:9es;daagsada:7haaac;}ihiaa.dig i7 aha {edhhihdc:gaahihaa;ide:-9ses;7ah97i:9es;daagsada:7haaac;}.idaaehiaah ahiaa,.ahiaa {sdci-aah97i:idaa;sdci-hh7a:9ab;}shaaahai.ghahddgdge ' + '{ehaahc9:ses;idgaag:cdca;iasi-hah9c:aasi;}shaaahai.ghahddgdge aa9aca {ehaahc9:ses;}shaaahai.ghahddgdge aha {ehaahc9-aasi:7ses;ehaahc9-idiidb:des;}shaaahai.ghahddgdge ahiaa {ahheah9:iadgd;bhg9hc-aasi:9' + '79.ihiaa,77.ihiaa {bhg9hc:ses;}.9gh-bdagaa,.ahdhfihi7haa9dciaci,.hahgg7fid9,.haahcgaafhahgg7 {7ddb:9;}.eghcghehaehhi {ahhi-hi9aa-i9ea:cdca;}.ihiehhi igiidc,.aaaaa7fbacg igiidc,.aaaaahfbacg igiidc,.ihh' + 'hgsgiidc,.iddaihgfigiidc,.igahagggbihfahgchba hcegi,.shaaa9hiabsgdahagsgaa hcegi {ahai7:hgid;daagsada:ahhhiaa;}.gbaiaeaahahc9h {ehaahc9-aasi:7ses;sdci-aah97i:idaa;sdci-hh7a:9ss%;}.9ghaids {ahai7:9ss%;' + 'sdci-shbha9:sh7dbh,dacaah,hhch-haghs;sdci-hh7a:9ss%;ehaahc9:ses;bhg9hc:ses;idgaag-idiidb:ses;idgaag-aasi:ses;idgaag-gh97i:ses;ihgd9gdgca-gdadg:#gshghg;daagsada:7haaac;}.digids hcegi {ggghdg:aashgai;}.' + 'bgaihehhi {sadhi:aasi;ahheah9:hcahca;ehaahc9:s 7ses;bhg9hc:s;}.bgaihehhi .cd7hagah {ahhi-hi9aa:cdca;}.s9fgaciagidhhihdc {bhg9hc:ses hgid;}.ahdhfeh9a9dciaci {ihgd9gdgca-hbh9a:gga(hi9aah/ahdhfid9.ge9);i' + 'hgd9gdgca-gaeahi:gaeahi-9;}shca9haghaaaaagihdc,.asfhahgg7fid9,#aaaaa7,.aaaaa7fihifshaafaasi,.iddaihg,.iddaihgfid9,.aaaaa7fihih,.aaaaa7fbacg .ihifbha,.aaaaa7fihifshaafgh97i,aha.aaaaa7fhgihaa .ihifbha,.' + 'ahdhfaaaaa9,.gdagbcf7ahaagfadc9,.ahdhfeh9ashiaa,.ahdhfeh9agddiag,.igahagggbifehi7fgdcihhcag,.ggggacifehi7figiidch,.hahgg7fids,#aaaaah,.aaaaahfchah9hihdc,.aaaaahfhgihaa .ihifbha,.ahdhfihi .ihisd9,.ahdh' + 'fihi .haaagiaa .ihisd9,.ahdhfihighaa,#aaaaa9,.aaaaa9,aha.9ghaids .s7ag,aha.9ghaids .sig,aha.9ghaids .sig ia,.gdagbcf7ahaag,.ihifhbhaafid9,.ihifhbhaafdssfid9,.eagbfihifhaaagiaa .ihifhbhaafid9,.ahdhfaaa' + 'aah {ihgd9gdgca-hbh9a:gga(heghiahfgfd.ec9);ihgd9gdgca-gaeahi:gaeahi-s;}shca9haghaaaaagihdc {ihgd9gdgca-edhhihdc:-ses -ses;7ah97i:9gces;}.asfhahgg7fid9 {ihgd9gdgca-edhhihdc:-ses -9gces;7ah97i:97ses;}#a' + 'aaaa7,.aaaaa7fihifshaafaasi {ihgd9gdgca-edhhihdc:-ses -7aces;7ah97i:gces;}.iddaihg,.iddaihgfid9 {ihgd9gdgca-edhhihdc:-ses -h9aes;7ah97i:gces;}a.aaaaa7fihih,.aaaaa7fbacg .ihifbha,.aaaaa7fihifshaafgh97i' + ' {ihgd9gdgca-edhhihdc:-ses -hages;7ah97i:hhes;}aha.aaaaa7fhgihaa .ihifbha {ihgd9gdgca-edhhihdc:-ses -hdbes;7ah97i:hhes;}.ahdhfaaaaa9 {ihgd9gdgca-edhhihdc:-ses -ghses;7ah97i:h7es;}.gdagbcf7ahaagfadc9 {' + 'ihgd9gdgca-edhhihdc:-ses -ga7es;7ah97i:hses;}.ahdhfeh9ashiaa {ihgd9gdgca-edhhihdc:-ses -gd7es;7ah97i:7des;}.hahgg7fgefgh97ifgdgcag {ihgd9gdgca-edhhihdc:-h9es -99ges;ahai7:9ses;7ah97i:ces;}.hahgg7fid9 ' + '{ihgd9gdgca-hbh9a:gga(hi9aah/haahcgaafehcaafid9.ge9);ihgd9gdgca-gaeahi:gaeahi-s;}.eh9afihiaa,aha.eh9afgdcigdah,aha.sdgbfgdcigdah,aha.9gh-ahhad9 aha.9gh-bdagaa aha.si,aha.gh97ifeh9afgdciaci aha.9gh-bda' + 'gaa aha.7a,aha.ggahiahh7hga9dciaciagah aha.9gh-bdagaa aha.si,aha.cdihs99dciaciagah aha.9gh-bdagaa aha.si,aha.agdesdshh7hga9dciaciagah aha.9gh-bdagaa aha.si,.sdgbfihiaafihg,aha.9gh-ahhad9 aha.9gh-bdaga' + 'a aha.7a,.hcaggaacfihiaashg,.ihiaaf7ahaag,.gh97ifihiaaf7ahaag,.aasifihiaaf7ahaag,.igiidcfid9,.hchgihaa .igiidcfid9 {ihgd9gdgca-hbh9a:gga(ihhaaeghiahfgfd.ec9);ihgd9gdgca-gaeahi:gaeahi-s;}.eh9afihiaa,ah' + 'a.eh9afgdcigdah,aha.sdgbfgdcigdah,aha.9gh-ahhad9 aha.9gh-bdagaa aha.si,aha.gh97ifeh9afgdciaci aha.9gh-bdagaa aha.7a,aha.ggahiahh7hga9dciaciagah aha.9gh-bdagaa aha.si,aha.cdihs99dciaciagah aha.9gh-bdag' + 'aa aha.si,aha.agdesdshh7hga9dciaciagah aha.9gh-bdagaa aha.si {ihgd9gdgca-edhhihdc:-ses -ses;7ah97i:7des;}.sdgbfihiaafihg,aha.9gh-ahhad9 aha.9gh-bdagaa aha.7a,.hcaggaacfihiaashg,.ihiaaf7ahaag,.gh97ifih' + 'iaaf7ahaag,.aasifihiaaf7ahaag {ihgd9gdgca-edhhihdc:-ses -7des;7ah97i:7aes;}.igiidcfid9 {edhhihdc:gaahihaa;bhg9hc-gh97i:7es;ehaahc9-gh97i:9hes;ehaahc9-aasi:9hes;bhg9hc-aasi:7es;a7hia-hehga:cdaghe;ihgd9' + 'gdgca-edhhihdc:-ses -ddes;7ah97i:77es;}.hchgihaa .igiidcfid9 {ihgd9gdgca-edhhihdc:-ses -bbes;7ah97i:77es;}.aashgaifad9d,.hchgihaa .igiidcfaasi,.igiidcfaasi,.igiidcfgh97i,.hchgihaa .igiidcfgh97i,.hgdcf' + 'hcsd,.hgdcfaggdg {ihgd9gdgca-hbh9a:gga(ihhaaeghiahfghgh.ec9);ihgd9gdgca-gaeahi:cd-gaeahi;}.aashgaifad9d {ihgd9gdgca-edhhihdc:-ses -ses;ahai7:c7es;7ah97i:hdes;}.hchgihaa .igiidcfaasi {ihgd9gdgca-edhhih' + 'dc:-c7es -ses;ahai7:9ges;7ah97i:77es;}.igiidcfaasi {edhhihdc:hihdagia;ide:ses;aasi:-7es;ihgd9gdgca-edhhihdc:-daes -ses;ahai7:9hes;7ah97i:77es;}.igiidcfgh97i {edhhihdc:hihdagia;ide:ses;gh97i:-7es;ihgd9' + 'gdgca-edhhihdc:-9sdes -ses;ahai7:9hes;7ah97i:77es;}.hchgihaa .igiidcfgh97i {ihgd9gdgca-edhhihdc:-977es -ses;ahai7:9hes;7ah97i:77es;}.hgdcfhcsd {ihgd9gdgca-edhhihdc:-c7es -77es;ahai7:9ges;7ah97i:9des;}' + '.hgdcfaggdg {ihgd9gdgca-edhhihdc:-daes -77es;ahai7:9ges;7ah97i:9ges;}';\n      var largeNewValue = largeTest,\n          len = largeTest.length,\n          count = nextRandom() % 20,\n          removeBound = len - count * 100,\n          logData = [];\n\n      for (; count > 0; count--) {\n        var removePos = nextRandom() % removeBound,\n            removeLength = 1 + nextRandom() % 100;\n        logData.push('(' + removePos + ', ' + removeLength + ')');\n        largeNewValue = largeNewValue.substring(0, removePos) + largeNewValue.substring(removePos + removeLength);\n      }\n\n      log('len: ' + len + ' count: ' + count + ' removed ( ' + logData.join(', ') + ' )');\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _lib\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      diffWords)\n      /*istanbul ignore end*/\n      (largeTest, largeNewValue);\n      log('diffResult length: ' + diffResult.length);\n      var removeCount = 0;\n      var removeChanges = [],\n          addChanges = [];\n\n      for (var i = 0; i < diffResult.length; i++) {\n        if (diffResult[i].removed) {\n          log('remove Change ' + i, diffResult[i]);\n          removeChanges.push(diffResult[i].value);\n        } else if (diffResult[i].added) {\n          log('add Change ' + i, diffResult[i]);\n          addChanges.push(diffResult[i].value);\n        } else {\n          log('no Change ' + i, diffResult[i]);\n          removeChanges.push(diffResult[i].value);\n          addChanges.push(diffResult[i].value);\n        }\n      }\n\n      log('diffResult remove length: ' + removeCount);\n\n      function stripSpace(value) {\n        return value.replace(/s+/g, '');\n      }\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (stripSpace(removeChanges.join(''))).to.equal(stripSpace(largeTest));\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (stripSpace(addChanges.join(''))).to.equal(stripSpace(largeNewValue));\n    }); // Create patch\n\n    var oldFile = 'value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'remove value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'remove value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'value\\n' + 'context\\n' + 'context';\n    var newFile = 'new value\\n' + 'new value 2\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'add value\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'context\\n' + 'new value\\n' + 'new value 2\\n' + 'context\\n' + 'context';\n    it('should generate a patch with default context size', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n' + '@@ -1,5 +1,6 @@\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '@@ -7,9 +8,8 @@\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '@@ -17,20 +17,21 @@\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '+add value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n' + ' context\\n' + ' context\\n' + '\\\\ No newline at end of file\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', oldFile, newFile, 'Old Header', 'New Header');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should generatea a patch with context size 0', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n' + '@@ -1,1 +1,2 @@\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n' + '@@ -11,1 +12,0 @@\\n' + '-remove value\\n' + '@@ -21,1 +21,0 @@\\n' + '-remove value\\n' + '@@ -30,0 +29,1 @@\\n' + '+add value\\n' + '@@ -34,1 +34,2 @@\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', oldFile, newFile, 'Old Header', 'New Header', {\n        context: 0\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should generate a patch with context size 2', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n' + '@@ -1,3 +1,4 @@\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n' + ' context\\n' + ' context\\n' + '@@ -9,5 +10,4 @@\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + '@@ -19,5 +19,4 @@\\n' + ' context\\n' + ' context\\n' + '-remove value\\n' + ' context\\n' + ' context\\n' + '@@ -28,9 +27,11 @@\\n' + ' context\\n' + ' context\\n' + '+add value\\n' + ' context\\n' + ' context\\n' + ' context\\n' + ' context\\n' + '-value\\n' + '+new value\\n' + '+new value 2\\n' + ' context\\n' + ' context\\n' + '\\\\ No newline at end of file\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', oldFile, newFile, 'Old Header', 'New Header', {\n        context: 2\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should output headers only for identical files', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\tOld Header\\n' + '+++ testFileName\\tNew Header\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', oldFile, oldFile, 'Old Header', 'New Header');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should omit headers if undefined', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\n' + '+++ testFileName\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', oldFile, oldFile);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should safely handle empty inputs', function () {\n      var expectedResult = 'Index: testFileName\\n' + '===================================================================\\n' + '--- testFileName\\n' + '+++ testFileName\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createPatch)\n      /*istanbul ignore end*/\n      ('testFileName', '', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n    it('should omit index with multiple file names', function () {\n      var expectedResult = '===================================================================\\n' + '--- foo\\n' + '+++ bar\\n';\n      var diffResult =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      createTwoFilesPatch)\n      /*istanbul ignore end*/\n      ('foo', 'bar', '', '');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (diffResult).to.equal(expectedResult);\n    });\n  });\n  describe('#structuredPatch', function () {\n    it('should handle files with the last line changed', function () {\n      var res =\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      structuredPatch)\n      /*istanbul ignore end*/\n      ('oldfile', 'newfile', 'line2\\nline3\\nline4\\n', 'line2\\nline3\\nline5', 'header1', 'header2');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (res).to.eql({\n        oldFileName: 'oldfile',\n        newFileName: 'newfile',\n        oldHeader: 'header1',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 3,\n          lines: [' line2', ' line3', '-line4', '+line5', '\\\\ No newline at end of file']\n        }]\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205898
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/merge.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/merge.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/merge.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/merge.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
        "sourceFileName": "merge.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_merge = require(\"../../lib/patch/merge\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"../../lib/patch/parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('patch/merge', function () {\n  describe('#merge', function () {\n    it('should update line numbers for no conflicts', function () {\n      var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n      var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -25,3 +25,4 @@\\n' + ' foo2\\n' + ' foo3\\n' + '+foo4\\n' + ' foo5\\n';\n      var expected = {\n        index: 'test',\n        oldFileName: 'test',\n        oldHeader: 'header1',\n        newFileName: 'test',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5']\n        }, {\n          oldStart: 25,\n          oldLines: 3,\n          newStart: 26,\n          newLines: 4,\n          lines: [' foo2', ' foo3', '+foo4', ' foo5']\n        }]\n      };\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, theirs)).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (theirs, mine)).to.eql(expected);\n    });\n    it('should remove identical hunks', function () {\n      var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n      var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n      var expected = {\n        index: 'test',\n        oldFileName: 'test',\n        oldHeader: 'header1',\n        newFileName: 'test',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5']\n        }]\n      };\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, theirs)).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (theirs, mine)).to.eql(expected);\n    });\n    describe('hunk merge', function () {\n      it('should merge adjacent additions', function () {\n        var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4-1\\n' + '+line4-2\\n' + '+line4-3\\n' + ' line5\\n';\n        var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -2,2 +2,3 @@\\n' + ' line3\\n' + ' line5\\n' + '+line4-4\\n';\n        var expected = {\n          index: 'test',\n          oldFileName: 'test',\n          oldHeader: 'header1',\n          newFileName: 'test',\n          newHeader: 'header2',\n          hunks: [{\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            newLines: 7,\n            lines: [' line2', ' line3', '+line4-1', '+line4-2', '+line4-3', ' line5', '+line4-4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should merge leading additions', function () {\n        var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + '+line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n        var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -3,1 +3,2 @@\\n' + ' line5\\n' + '+line4\\n';\n        var expected = {\n          index: 'test',\n          oldFileName: 'test',\n          oldHeader: 'header1',\n          newFileName: 'test',\n          newHeader: 'header2',\n          hunks: [{\n            oldStart: 1,\n            oldLines: 2,\n            newStart: 1,\n            newLines: 5,\n            lines: ['+line2', ' line3', '+line4', ' line5', '+line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should merge adjacent removals', function () {\n        var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + '-line3\\n' + '+line4\\n' + ' line5\\n';\n        var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -2,2 +2,3 @@\\n' + ' line3\\n' + ' line5\\n' + '+line4\\n';\n        var expected = {\n          index: 'test',\n          oldFileName: 'test',\n          oldHeader: 'header1',\n          newFileName: 'test',\n          newHeader: 'header2',\n          hunks: [{\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            newLines: 3,\n            lines: ['-line2', '-line3', '+line4', ' line5', '+line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should merge adjacent additions with context removal', function () {\n        var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4-1\\n' + '+line4-2\\n' + '+line4-3\\n' + '-line5\\n';\n        var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -2,2 +2,3 @@\\n' + ' line3\\n' + ' line5\\n' + '+line4-4\\n';\n        var expected = {\n          index: 'test',\n          oldFileName: 'test',\n          oldHeader: 'header1',\n          newFileName: 'test',\n          newHeader: 'header2',\n          hunks: [{\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            newLines: 6,\n            lines: [' line2', ' line3', '+line4-1', '+line4-2', '+line4-3', '-line5', '+line4-4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should merge removal supersets', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '-line4\\n' + ' line5\\n';\n        var theirs = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + ' line4\\n' + ' line5\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 5,\n            newStart: 1,\n            newLines: 3,\n            lines: [' line2', ' line3', '-line4', '-line4', ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict removal disjoint sets', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '-line4\\n' + '-line4\\n' + ' line5\\n';\n        var theirs = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '-line4\\n' + '-line5\\n' + ' line5\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 6,\n            newStart: 1,\n            newLines: 3,\n            lines: [' line2', ' line3', {\n              conflict: true,\n              mine: ['-line4', '-line4', '-line4'],\n              theirs: ['-line4', '-line4', '-line5']\n            }, ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict removal disjoint context', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '-line4\\n' + '-line4\\n' + ' line5\\n';\n        var theirs = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '-line4\\n' + '-line4\\n' + ' line5\\n' + ' line5\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            newLines: 4,\n            lines: [' line2', ' line3', {\n              conflict: true,\n              mine: ['-line4', '-line4', '-line4'],\n              theirs: ['-line4', '-line4']\n            }, ' line5', ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      }); // These are all conflicts. A conflict is anything that is on the same desired line that is not identical\n\n      it('should conflict two additions at the same line', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4-1\\n' + '+line4-2\\n' + '+line4-3\\n' + ' line5\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + ' line3\\n' + '+line4-4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            lines: [' line2', ' line3', {\n              conflict: true,\n              mine: ['+line4-1', '+line4-2', '+line4-3'],\n              theirs: ['+line4-4']\n            }, ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict addition supersets', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + '+line4\\n' + ' line5\\n';\n        var theirs = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            lines: [' line2', ' line3', {\n              conflict: true,\n              mine: ['+line4', '+line4'],\n              theirs: ['+line4']\n            }, ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle removal and edit (add+remove) at the same line', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + '-line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 2,\n            newStart: 1,\n            lines: [' line2', {\n              conflict: true,\n              mine: ['-line3'],\n              theirs: ['-line3', '+line4']\n            }]\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) on multiple lines', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + ' line3\\n' + ' line5\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 4,\n            newStart: 1,\n            newLines: 3,\n            lines: ['-line2', '-line3', '-line3', '+line4', '+line4', ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) past extents', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + ' line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '-line5\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 4,\n            newStart: 1,\n            newLines: 2,\n            lines: ['-line2', '-line3', '-line3', '-line5', '+line4', '+line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) past extents', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + ' line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '-line5\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 4,\n            newStart: 1,\n            newLines: 2,\n            lines: ['-line2', '-line3', '-line3', '-line5', '+line4', '+line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) context mismatch', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + ' line4\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '-line5\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            lines: ['-line2', {\n              conflict: true,\n              mine: [' line3'],\n              theirs: ['-line3', '-line3', '-line5', '+line4', '+line4']\n            }, ' line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) addition', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + '+line6\\n' + ' line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '-line5\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            lines: ['-line2', {\n              conflict: true,\n              mine: [' line3', '+line6', ' line3'],\n              theirs: ['-line3', '-line3', '-line5', '+line4', '+line4']\n            }]\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit (add+remove) on multiple lines with context', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + '-line3\\n' + ' line3\\n' + ' line5\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + '-line3\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            lines: [' line2', {\n              conflict: true,\n              mine: ['-line3'],\n              theirs: ['-line3', '-line3', '+line4', '+line4']\n            }, ' line3', // TODO: Fix\n            ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict edit with remove in middle', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + ' line3\\n' + '-line3\\n' + ' line5\\n';\n        var theirs = '@@ -1,3 +1,2 @@\\n' + ' line2\\n' + '-line3\\n' + '-line3\\n' + '+line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 4,\n            newStart: 1,\n            lines: ['-line2', {\n              conflict: true,\n              mine: [' line3', '-line3'],\n              theirs: ['-line3', '-line3', '+line4', '+line4']\n            }, ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle edit and addition with context connextion', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + '-line3\\n' + '-line4\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + ' line3\\n' + ' line4\\n' + '+line4\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            newLines: 2,\n            lines: [' line2', '-line3', '-line4', '+line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should merge removals that start in the leading section', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + '-line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + ' line4\\n';\n        var expected = {\n          hunks: [{\n            oldStart: 1,\n            oldLines: 3,\n            newStart: 1,\n            newLines: 1,\n            lines: ['-line2', '-line3', ' line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict edits that start in the leading section', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '-line2\\n' + '-line3\\n' + '-line3\\n' + '-line3\\n' + '-line3\\n' + '+line4\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + ' line3\\n' + ' line3\\n' + '-line3\\n' + '-line3\\n' + ' line5\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 6,\n            newStart: 1,\n            lines: ['-line2', {\n              conflict: true,\n              mine: ['-line3', '-line3', '-line3', '-line3', '+line4'],\n              theirs: [' line3', ' line3', '-line3', '-line3']\n            }, ' line5']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should conflict adds that start in the leading section', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + '+line2\\n' + '+line3\\n';\n        var theirs = '@@ -2 +2,2 @@\\n' + '-line3\\n' + ' line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            lines: ['+line2', {\n              conflict: true,\n              mine: ['+line3'],\n              theirs: ['-line3']\n            }, ' line4']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle multiple conflicts in one hunk', function () {\n        var mine = '@@ -1,10 +1,10 @@\\n' + ' line1\\n' + '-line2\\n' + '+line2-1\\n' + ' line3\\n' + ' line4\\n' + ' line5\\n' + '-line6\\n' + '+line6-1\\n' + ' line7\\n';\n        var theirs = '@@ -1,10 +1,10 @@\\n' + ' line1\\n' + '-line2\\n' + '+line2-2\\n' + ' line3\\n' + ' line4\\n' + ' line5\\n' + '-line6\\n' + '+line6-2\\n' + ' line7\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 7,\n            newStart: 1,\n            newLines: 7,\n            lines: [' line1', {\n              conflict: true,\n              mine: ['-line2', '+line2-1'],\n              theirs: ['-line2', '+line2-2']\n            }, ' line3', ' line4', ' line5', {\n              conflict: true,\n              mine: ['-line6', '+line6-1'],\n              theirs: ['-line6', '+line6-2']\n            }, ' line7']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should remove oldLines if base differs', function () {\n        var mine = '@@ -1,10 +1,10 @@\\n' + ' line1\\n' + '-line2\\n' + '-line2-0\\n' + '+line2-1\\n' + ' line3\\n' + ' line4\\n' + ' line5\\n' + '-line6\\n' + '+line6-1\\n' + ' line7\\n';\n        var theirs = '@@ -1,10 +1,10 @@\\n' + ' line1\\n' + '-line2\\n' + '+line2-2\\n' + '+line2-3\\n' + ' line3\\n' + ' line4\\n' + ' line5\\n' + '-line6\\n' + '+line6-2\\n' + ' line7\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            newStart: 1,\n            lines: [' line1', {\n              conflict: true,\n              mine: ['-line2', '-line2-0', '+line2-1'],\n              theirs: ['-line2', '+line2-2', '+line2-3']\n            }, ' line3', ' line4', ' line5', {\n              conflict: true,\n              mine: ['-line6', '+line6-1'],\n              theirs: ['-line6', '+line6-2']\n            }, ' line7']\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n      it('should handle multiple conflict sections', function () {\n        var mine = '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n';\n        var theirs = '@@ -1 +1,2 @@\\n' + ' line3\\n' + ' line4\\n';\n        var expected = {\n          hunks: [{\n            conflict: true,\n            oldStart: 1,\n            oldLines: 2,\n            newStart: 1,\n            newLines: 2,\n            lines: [{\n              conflict: true,\n              mine: [' line2', ' line3'],\n              theirs: [' line3', ' line4']\n            }]\n          }]\n        };\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (mine, theirs)).to.eql(expected);\n        swapConflicts(expected);\n\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _chai\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        expect)\n        /*istanbul ignore end*/\n        (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        (theirs, mine)).to.eql(expected);\n      });\n    });\n    it('should handle file name updates', function () {\n      var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test2\\theader2\\n';\n      var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n';\n      var expected = {\n        index: 'test',\n        oldFileName: 'test',\n        oldHeader: 'header1',\n        newFileName: 'test2',\n        newHeader: 'header2',\n        hunks: []\n      };\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, theirs)).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (theirs, mine)).to.eql(expected);\n    });\n    it('should handle file name conflicts', function () {\n      var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test-a\\theader-a\\n' + '+++ test2\\theader2\\n';\n      var theirs = 'Index: test\\n' + '===================================================================\\n' + '--- test-b\\theader-b\\n' + '+++ test3\\theader3\\n';\n      var partialMatch = 'Index: test\\n' + '===================================================================\\n' + '--- test-b\\theader-a\\n' + '+++ test3\\theader3\\n';\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, theirs)).to.eql({\n        conflict: true,\n        index: 'test',\n        oldFileName: {\n          mine: 'test-a',\n          theirs: 'test-b'\n        },\n        oldHeader: {\n          mine: 'header-a',\n          theirs: 'header-b'\n        },\n        newFileName: {\n          mine: 'test2',\n          theirs: 'test3'\n        },\n        newHeader: {\n          mine: 'header2',\n          theirs: 'header3'\n        },\n        hunks: []\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, partialMatch)).to.eql({\n        conflict: true,\n        index: 'test',\n        oldFileName: {\n          mine: 'test-a',\n          theirs: 'test-b'\n        },\n        oldHeader: 'header-a',\n        newFileName: {\n          mine: 'test2',\n          theirs: 'test3'\n        },\n        newHeader: {\n          mine: 'header2',\n          theirs: 'header3'\n        },\n        hunks: []\n      });\n    });\n    it('should select available headers', function () {\n      var mine = 'Index: test\\n' + '===================================================================\\n' + '--- test\\theader1\\n' + '+++ test\\theader2\\n' + '@@ -1,3 +1,4 @@\\n' + ' line2\\n' + ' line3\\n' + '+line4\\n' + ' line5\\n';\n      var theirs = '@@ -25,3 +25,4 @@\\n' + ' foo2\\n' + ' foo3\\n' + '+foo4\\n' + ' foo5\\n';\n      var expected = {\n        index: 'test',\n        oldFileName: 'test',\n        oldHeader: 'header1',\n        newFileName: 'test',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5']\n        }, {\n          oldStart: 25,\n          oldLines: 3,\n          newStart: 26,\n          newLines: 4,\n          lines: [' foo2', ' foo3', '+foo4', ' foo5']\n        }]\n      };\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine, theirs)).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (theirs, mine)).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (mine,\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (theirs)[0])).to.eql(expected);\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      (theirs,\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (mine)[0])).to.eql(expected);\n    });\n    it('should diff from base', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _merge\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      merge)\n      /*istanbul ignore end*/\n      ('foo\\nbar\\nbaz\\n', 'foo\\nbaz\\nbat\\n', 'foo\\nbaz\\n')).to.eql({\n        hunks: [{\n          oldStart: 1,\n          oldLines: 2,\n          newStart: 1,\n          newLines: 4,\n          lines: [' foo', '+bar', ' baz', '+bat']\n        }]\n      });\n    });\n    it('should error if not passed base', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _merge\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        merge)\n        /*istanbul ignore end*/\n        ('foo', 'foo');\n      }).to['throw']('Must provide a base reference or pass in a patch');\n    });\n  });\n});\n\nfunction swapConflicts(expected) {\n  expected.hunks.forEach(function (hunk) {\n    hunk.lines.forEach(function (line) {\n      if (line.conflict) {\n        var tmp = line.mine;\n        line.mine = line.theirs;\n        line.theirs = tmp;\n      }\n    });\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205899
  },
  "{\"sourceMaps\":\"inline\",\"auxiliaryCommentBefore\":\"istanbul ignore start\",\"auxiliaryCommentAfter\":\"istanbul ignore end\",\"sourceRoot\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"filename\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/parse.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/osamawh/Desktop/Gradeproof/jsdiff\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.4": {
    "metadata": {},
    "options": {
      "sourceMaps": "inline",
      "auxiliaryCommentBefore": "istanbul ignore start",
      "auxiliaryCommentAfter": "istanbul ignore end",
      "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/parse.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/osamawh/Desktop/Gradeproof/jsdiff",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/parse.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch/parse.js",
        "auxiliaryCommentBefore": "istanbul ignore start",
        "auxiliaryCommentAfter": "istanbul ignore end",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "inline",
        "sourceRoot": "/Users/osamawh/Desktop/Gradeproof/jsdiff/test/patch",
        "sourceFileName": "parse.js"
      }
    },
    "ast": null,
    "code": "/*istanbul ignore start*/\n\"use strict\";\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_parse = require(\"../../lib/patch/parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_chai = require(\"chai\")\n/*istanbul ignore end*/\n;\n\ndescribe('patch/parse', function () {\n  describe('#parse', function () {\n    it('should parse basic patches', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse single line hunks', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1 +1 @@\\n-line3\\n+line4\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 1,\n          newStart: 1,\n          newLines: 1,\n          lines: ['-line3', '+line4'],\n          linedelimiters: ['\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse multiple hunks', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\\n@@ -4,3 +1,4 @@\\n line2\\n line3\\n-line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }, {\n          oldStart: 4,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '-line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse single index patches', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"Index: test\\n===================================================================\\n--- from\\theader1\\n+++ to\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        index: 'test',\n        oldFileName: 'from',\n        oldHeader: 'header1',\n        newFileName: 'to',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse multiple index files', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"Index: test\\n===================================================================\\n--- from\\theader1\\n+++ to\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\\nIndex: test2\\n===================================================================\\n--- from\\theader1\\n+++ to\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        index: 'test',\n        oldFileName: 'from',\n        oldHeader: 'header1',\n        newFileName: 'to',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }, {\n        index: 'test2',\n        oldFileName: 'from',\n        oldHeader: 'header1',\n        newFileName: 'to',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse multiple files without the Index line', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"--- from\\theader1\\n+++ to\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\\n--- from\\theader1\\n+++ to\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        oldFileName: 'from',\n        oldHeader: 'header1',\n        newFileName: 'to',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }, {\n        oldFileName: 'from',\n        oldHeader: 'header1',\n        newFileName: 'to',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should parse patches with filenames having quotes and back slashes', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"Index: test\\n===================================================================\\n--- \\\"from\\\\\\\\a\\\\\\\\file\\\\\\\\with\\\\\\\\quotes\\\\\\\\and\\\\\\\\backslash\\\"\\theader1\\n+++ \\\"to\\\\\\\\a\\\\\\\\file\\\\\\\\with\\\\\\\\quotes\\\\\\\\and\\\\\\\\backslash\\\"\\theader2\\n@@ -1,3 +1,4 @@\\n line2\\n line3\\n+line4\\n line5\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        index: 'test',\n        oldFileName: 'from\\\\a\\\\file\\\\with\\\\quotes\\\\and\\\\backslash',\n        oldHeader: 'header1',\n        newFileName: 'to\\\\a\\\\file\\\\with\\\\quotes\\\\and\\\\backslash',\n        newHeader: 'header2',\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: [' line2', ' line3', '+line4', ' line5'],\n          linedelimiters: ['\\n', '\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should note added EOFNL', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1,3 +1,4 @@\\n-line5\\n\\\\ No newline at end of file\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: ['-line5', '\\\\ No newline at end of file'],\n          linedelimiters: ['\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should note removed EOFNL', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1,3 +1,4 @@\\n+line5\\n\\\\ No newline at end of file\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: ['+line5', '\\\\ No newline at end of file'],\n          linedelimiters: ['\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should ignore context no EOFNL', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      \"@@ -1,3 +1,4 @@\\n+line4\\n line5\\n\\\\ No newline at end of file\"\n      /*istanbul ignore end*/\n      )).to.eql([{\n        hunks: [{\n          oldStart: 1,\n          oldLines: 3,\n          newStart: 1,\n          newLines: 4,\n          lines: ['+line4', ' line5', '\\\\ No newline at end of file'],\n          linedelimiters: ['\\n', '\\n', '\\n']\n        }]\n      }]);\n    });\n    it('should perform sanity checks on line numbers', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      ('@@ -1 +1 @@', {\n        strict: true\n      });\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _parse\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        parsePatch)\n        /*istanbul ignore end*/\n        ('@@ -1 +1,4 @@', {\n          strict: true\n        });\n      }).to['throw']('Added line count did not match for hunk at line 1');\n\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _parse\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        parsePatch)\n        /*istanbul ignore end*/\n        ('@@ -1,4 +1 @@', {\n          strict: true\n        });\n      }).to['throw']('Removed line count did not match for hunk at line 1');\n    });\n    it('should not throw on invalid input', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      ('blit\\nblat\\nIndex: foo\\nfoo')).to.eql([{\n        hunks: [],\n        index: 'foo'\n      }]);\n    });\n    it('should throw on invalid input in strict mode', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _chai\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      expect)\n      /*istanbul ignore end*/\n      (function () {\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _parse\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        parsePatch)\n        /*istanbul ignore end*/\n        ('Index: foo\\n+++ bar\\nblah', {\n          strict: true\n        });\n      }).to['throw'](/Unknown line 3 \"blah\"/);\n    });\n    it('should handle OOM case', function () {\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _parse\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      parsePatch)\n      /*istanbul ignore end*/\n      ('Index: \\n===================================================================\\n--- \\n+++ \\n@@ -1,1 +1,2 @@\\n-1\\n\\\\ No newline at end of file\\n+1\\n+2\\n');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": null,
    "sourceType": "script",
    "mtime": 1551147205900
  }
}